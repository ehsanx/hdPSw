[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "High dimensional propensity score",
    "section": "",
    "text": "Preface\nThis is a Quarto book.\nTo learn more about Quarto books visit https://quarto.org/docs/books.\nThis is a span that has the class aside which places it in the margin without a footnote number.\n\n1 + 1\n#> [1] 2\n\n\n\n\n\n\n\nNote\n\n\n\nNote that there are five types of callouts, including: note, warning, important, tip, and caution.\n\n\n\n\n\n\n\n\nTip With Title\n\n\n\nThis is an example of a callout with a title.\n\n\n\n\n\n\n\n\nExpand To Learn About Collapse\n\n\n\n\n\nThis is an example of a ‘folded’ caution callout that can be expanded by the user. You can use collapse=\"true\" to collapse it by default or collapse=\"false\" to make a collapsible callout that is expanded by default.\n\n\n\n\n\n\n\nflowchart LR\n  A[Hard edge] --> B(Round edge)\n  B --> C{Decision}\n  C --> D[Result one]\n  C --> E[Result two]"
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Introduction",
    "section": "",
    "text": "This is a book created from markdown and executable code.\nSee Knuth (1984) for additional discussion of literate programming.\n\n1 + 1\n#> [1] 2\n\n\n\n\n\nKnuth, Donald E. 1984. “Literate Programming.” Comput. J. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever.\n\n1 + 1\n#> [1] 2"
  },
  {
    "objectID": "obj.html",
    "href": "obj.html",
    "title": "2  Objectives",
    "section": "",
    "text": "We know from the first fundamental theorem of calculus that for \\(x\\) in \\([a, b]\\):\n\\[\\frac{d}{dx}\\left( \\int_{a}^{x} f(u)\\,du\\right)=f(x).\\]"
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Knuth, Donald E. 1984. “Literate Programming.” Comput.\nJ. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "NHANES.html",
    "href": "NHANES.html",
    "title": "NHANES",
    "section": "",
    "text": "Data preparation"
  },
  {
    "objectID": "index13.html#download-and-subsetting-to-retain-only-the-useful-variables",
    "href": "index13.html#download-and-subsetting-to-retain-only-the-useful-variables",
    "title": "Appendix A — Downloading NHANES 2013-14 cycle components",
    "section": "A.1 Download and Subsetting to retain only the useful variables",
    "text": "A.1 Download and Subsetting to retain only the useful variables\n\nA.1.1 Demographic\nDemographic Variables and Sample Weights (DEMO_H): The 2-year sample weights (WTINT2YR, WTMEC2YR) should be used. 15 masked variance strata and 30 masked primary sampling units (PSUs) are included in the demographics file. Each stratum has 2 PSUs.\n\ndemo <- nhanes('DEMO_H')    # Both males and females 0 YEARS - 150 YEARS\ndemo1 <- demo[c(\"SEQN\",     # Respondent sequence number\n                \"RIDAGEYR\", # Age in years at screening\n                \"RIAGENDR\", # gender\n                \"DMDEDUC2\", # Education level - Adults 20+\n                \"RIDRETH1\", # race/ethnicity\n                \"DMDMARTL\", # marital status    \n                \"INDHHIN2\", # Annual household income\n                \"DMDBORN4\", # where born\n                \"RIDEXPRG\", # Pregnancy status at exam (released for 20-44 yrs)\n                \"SDDSRVYR\", # survey cycle\n                \"WTINT2YR\", # Full sample 2 year weights\n                \"WTMEC2YR\", # Full sample 2 year MEC exam weight\n                \"SDMVPSU\",  # Masked variance pseudo-PSU\n                \"SDMVSTRA\")]# Masked variance pseudo-stratum\ndemo_vars <- names(demo1) \ndemo2 <- nhanesTranslate('DEMO_H', demo_vars, data = demo1)\n#> No translation table is available for SEQN\n#> Translated columns: RIAGENDR DMDEDUC2 RIDRETH1 DMDMARTL INDHHIN2 DMDBORN4 RIDEXPRG\n\n\n\nA.1.2 BMI\nBody Measures (BMX_H): The NHANES examination sample weights should be used to analyze the body measurement data. However, if the data is joined with data from the MEC, the MEC sample weights should be used.\n\nbmx <- nhanes('BMX_H')\nbmx1 <- bmx[c(\"SEQN\", # Respondent sequence number\n              \"BMXBMI\")] # Body Mass Index (kg/m**2): 2 YEARS - 150 YEARS\nbmx_vars <- names(bmx1)\nbmx2 <- nhanesTranslate('BMX_H', bmx_vars, data = bmx1)\n#> No translation table is available for SEQN\n#> Warning in nhanesTranslate(\"BMX_H\", bmx_vars, data = bmx1): No columns were\n#> translated\n\n\n\nA.1.3 Diabetes\nDiabetes (DIQ_H): diabetes questionnaire data must be conducted using the appropriate survey design variables, sample weights, and the basic demographic variables. Interview weights should only be used if questionnaire data are analyzed by themselves. However, if the data is joined with data from the MEC, the MEC sample weights should be used.\n\ndiq <- nhanes('DIQ_H')\ndiq1 <- diq[c(\"SEQN\", # Respondent sequence number\n              \"DIQ010\", # Doctor told you have diabetes\n              \"DIQ050\", # Taking insulin now\n              \"DIQ070\", # Take diabetic pills to lower blood sugar\n              \"DIQ175A\")] # Family history\ndiq_vars <- names(diq1)\ndiq2 <- nhanesTranslate('DIQ_H', diq_vars, data = diq1)\n#> No translation table is available for SEQN\n#> Translated columns: DIQ010 DIQ050 DIQ070 DIQ175A\n\n\n\nA.1.4 Smoking\nSmoking - Cigarette Use (SMQ_H): Interview weights should only be used if questionnaire data are analyzed by themselves. However, if the data is joined with data from the MEC, the MEC sample weights should be used.\n\nsmq <- nhanes('SMQ_H')\nsmq1 <- smq[c(\"SEQN\", # Respondent sequence number\n              \"SMQ020\", # Smoked at least 100 cigarettes in life\n              \"SMQ040\")] # Do you now smoke cigarettes?: 18 YEARS - 150 YEARS\nsmq_vars <- names(smq1)\nsmq2 <- nhanesTranslate('SMQ_H', smq_vars, data = smq1)\n#> No translation table is available for SEQN\n#> Translated columns: SMQ020 SMQ040\n\n\n\nA.1.5 Diet\nDiet Behavior & Nutrition (DBQ_H): interview sample weights may be used in their analysis. However, if the data is joined with data from the MEC, the MEC sample weights should be used.\n\ndbq <- nhanes('DBQ_H')\ndbq1 <- dbq[c(\"SEQN\", # Respondent sequence number\n              \"DBQ700\")] # How healthy is the diet: 16 YEARS - 150 YEARS\ndbq_vars <- names(dbq1)\ndbq2 <- nhanesTranslate('DBQ_H', dbq_vars, data = dbq1)\n#> No translation table is available for SEQN\n#> Translated columns: DBQ700\n\n\n\nA.1.6 Physical activity\nPhysical Activity (PAQ_H): the interview sample weights should be used in their analysis. However, if the data is joined with data from the MEC, the MEC sample weights should be used.\n\npaq <- nhanes('PAQ_H')\npaq1 <- paq[c(\"SEQN\", # Respondent sequence number\n              \"PAQ605\")] # Vigorous work activity: 18 YEARS150 YEARS\npaq_vars <- names(paq1)\npaq2 <- nhanesTranslate('PAQ_H', paq_vars, data = paq1)\n#> No translation table is available for SEQN\n#> Translated columns: PAQ605\n\n\n\nA.1.7 Access to healthcare\nHospital Utilization & Access to Care (HUQ_H): Although these data were collected as part of the household questionnaire, if they are merged with the MEC exam data, exam sample weights should be used for the analyses.\n\nhuq <- nhanes('HUQ_H')\nhuq1 <- huq[c(\"SEQN\", # Respondent sequence number\n              \"HUQ030\")] # Routine place to go for healthcare\nhuq_vars <- names(huq1)\nhuq2 <- nhanesTranslate('HUQ_H', huq_vars, data = huq1)\n#> No translation table is available for SEQN\n#> Translated columns: HUQ030\n\n\n\nA.1.8 Blood pressure\nBlood Pressure (BPX_H): Exam sample weights should be used for analyses.\n\nSystolic blood pressure and maximum inflation level cannot be greater than 300 mmHg;\nSystolic and diastolic blood pressure measurements and the maximum inflation level can be even numbers only;\nSystolic blood pressure must be greater than diastolic blood pressure;\nIf there is no systolic blood pressure, there can be no diastolic blood pressure. (There can be a systolic measurement without a diastolic measurement.); and\nDiastolic blood pressure can be zero.\n\n\nbpx <- nhanes('BPX_H')\nbpx1 <- bpx[c(\"SEQN\", # Respondent sequence number\n              \"BPXSY1\", # Systolic Blood pres (1st rdg) mmHg: 8 - 150 YEARS\n              \"BPXSY2\", # Systolic: Blood pres (2nd rdg) mm Hg\n              \"BPXSY3\", # Systolic: Blood pres (3rd rdg) mm Hg\n              \"BPXSY4\", # Systolic: Blood pres (4th rdg) mm Hg\n              \"BPXDI1\", # Diastolic Blood pres (1st rdg) mmHg: 8 - 150 YEARS\n              \"BPXDI2\", # Diastolic: Blood pres (2nd rdg) mm Hg\n              \"BPXDI3\", # Diastolic: Blood pres (3rd rdg) mm Hg\n              \"BPXDI4\")] # Diastolic: Blood pres (4th rdg) mm Hg\nbpx_vars <- names(bpx1)\nbpx2 <- nhanesTranslate('BPX_H', bpx_vars, data = bpx1)\n#> No translation table is available for SEQN\n#> Warning in nhanesTranslate(\"BPX_H\", bpx_vars, data = bpx1): No columns were\n#> translated\n\nBlood Pressure & Cholesterol (BPQ_H): Although these data were collected as part of the household questionnaire, if they are merged with the MEC exam data, exam sample weights should be used for the analyses.\n\nbpq <- nhanes('BPQ_H')\nbpq1 <- bpq[c(\"SEQN\", # Respondent sequence number\n              \"BPQ080\")] # high cholesterol\nbpq_vars <- names(bpq1)\nbpq2 <- nhanesTranslate('BPQ_H', bpq_vars, data = bpq1)\n#> No translation table is available for SEQN\n#> Translated columns: BPQ080\n\n\n\nA.1.9 Sleep\nSleep Disorders (SLQ_H):\n\nslq <- nhanes('SLQ_H')\nslq1 <- slq[c(\"SEQN\", # Respondent sequence number\n              \"SLD010H\")] # Sleep hours \nslq_vars <- names(slq1)\nslq2 <- nhanesTranslate('SLQ_H', slq_vars, data = slq1)\n#> No translation table is available for SEQN\n#> Warning in nhanesTranslate(\"SLQ_H\", slq_vars, data = slq1): No columns were\n#> translated\n\n\n\nA.1.10 Laboratory data\nStandard Biochemistry Profile (BIOPRO_H): Exam sample weights should be used for analyses.\n\n# Standard Biochemistry Profile\nbiopro <- nhanes('BIOPRO_H') # 12 YEARS - 150 YEARS\nbiopro1 <- biopro[c(\"SEQN\", # Respondent sequence number\n                    #\"LBXSTR\", # Triglycerides, refrigerated (mg/dL)\n                    \"LBXSUA\", # Uric acid (mg/dL)\n                    \"LBXSTP\", # Total protein (g/dL)\n                    \"LBXSTB\", # Total bilirubin (mg/dL)\n                    \"LBXSPH\", # Phosphorus (mg/dL)\n                    \"LBXSNASI\", # Sodium (mmol/L)\n                    \"LBXSKSI\", # Potassium (mmol/L)\n                    \"LBXSGB\", # Globulin (g/dL)\n                    \"LBXSCA\")] # Total Calcium (mg/dL)\nbiopro_vars <- names(biopro1) \nbiopro2 <- nhanesTranslate('BIOPRO_H', biopro_vars, data = biopro1)\n#> No translation table is available for SEQN\n#> Warning in nhanesTranslate(\"BIOPRO_H\", biopro_vars, data = biopro1): No columns\n#> were translated\n\n\n\nA.1.11 ICD-10-CM codes\nPrescription Medications (RXQ_RX_H): The Prescription Medications subsection provides personal interview data on use of prescription medications during a one-month period prior to the participant’s interview date. During the household SP interview, survey participants are asked if they have taken medications in the past 30 days for which they needed a prescription. Those who answer “yes” are asked to show the interviewer the medication containers of all the products used.\n\nrxq <- nhanes('RXQ_RX_H')\nrxq10 <- rxq[c(\"SEQN\", # Respondent sequence number\n               \"RXDRSC1\")] # ICD-10-CM code 1\nrxq11 <- names(rxq10) \nrxq12 <- nhanesTranslate('RXQ_RX_H', rxq11, data = rxq10)\n#> No translation table is available for SEQN\n#> Translated columns: RXDRSC1\n\nrxq20 <- rxq[c(\"SEQN\", # Respondent sequence number\n               \"RXDRSC2\")] # ICD-10-CM code 2\nrxq21 <- names(rxq20) \nrxq22 <- nhanesTranslate('RXQ_RX_H', rxq21, data = rxq20)\n#> No translation table is available for SEQN\n#> Translated columns: RXDRSC2\n\nrxq30 <- rxq[c(\"SEQN\", # Respondent sequence number\n               \"RXDRSC3\")] # ICD-10-CM code 3\nrxq31 <- names(rxq30) \nrxq32 <- nhanesTranslate('RXQ_RX_H', rxq31, data = rxq30)\n#> No translation table is available for SEQN\n#> Translated columns: RXDRSC3"
  },
  {
    "objectID": "index13.html#merging-all-the-datasets---except-for-icd-10-codes",
    "href": "index13.html#merging-all-the-datasets---except-for-icd-10-codes",
    "title": "Appendix A — Downloading NHANES 2013-14 cycle components",
    "section": "A.2 Merging all the datasets - except for ICD-10 codes",
    "text": "A.2 Merging all the datasets - except for ICD-10 codes\n\ndat <- join_all(list(demo2, bmx2, diq2, smq2, dbq2, paq2, \n                     huq2, bpx2, bpq2, slq2, biopro2),\n                by = \"SEQN\", type='full')\nnhanes13 <- dat\n\n\nA.2.1 Save dataset for later use\n\ndim(nhanes13)\n#> [1] 10175    42\nsave(nhanes13, rxq12, rxq22, rxq32, file = \"data/analytic13.RData\")"
  },
  {
    "objectID": "index15.html#download-and-subsetting-to-retain-only-the-useful-variables",
    "href": "index15.html#download-and-subsetting-to-retain-only-the-useful-variables",
    "title": "Appendix B — Downloading NHANES 2015-16 cycle components",
    "section": "B.1 Download and Subsetting to retain only the useful variables",
    "text": "B.1 Download and Subsetting to retain only the useful variables\n\nB.1.1 Demographic\nDemographic Variables and Sample Weights (DEMO_H): The 2-year sample weights (WTINT2YR, WTMEC2YR) should be used. 15 masked variance strata and 30 masked primary sampling units (PSUs) are included in the demographics file. Each stratum has 2 PSUs.\n\ndemo <- nhanes('DEMO_I')    # Both males and females 0 YEARS - 150 YEARS\ndemo1 <- demo[c(\"SEQN\",     # Respondent sequence number\n                \"RIDAGEYR\", # Age in years at screening\n                \"RIAGENDR\", # gender\n                \"DMDEDUC2\", # Education level - Adults 20+\n                \"RIDRETH1\", # race/ethnicity\n                \"DMDMARTL\", # marital status    \n                \"INDHHIN2\", # Annual household income\n                \"DMDBORN4\", # where born\n                \"RIDEXPRG\", # Pregnancy status at exam (released for 20-44 yrs)\n                \"SDDSRVYR\", # survey cycle\n                \"WTINT2YR\", # Full sample 2 year weights\n                \"WTMEC2YR\", # Full sample 2 year MEC exam weight\n                \"SDMVPSU\",  # Masked variance pseudo-PSU\n                \"SDMVSTRA\")]# Masked variance pseudo-stratum\ndemo_vars <- names(demo1) \ndemo2 <- nhanesTranslate('DEMO_I', demo_vars, data = demo1)\n#> No translation table is available for SEQN\n#> Translated columns: RIAGENDR DMDEDUC2 RIDRETH1 DMDMARTL INDHHIN2 DMDBORN4 RIDEXPRG\n\n\n\nB.1.2 BMI\nBody Measures (BMX_H): The NHANES examination sample weights should be used to analyze the body measurement data. However, if the data is joined with data from the MEC, the MEC sample weights should be used.\n\nbmx <- nhanes('BMX_I')\nbmx1 <- bmx[c(\"SEQN\", # Respondent sequence number\n              \"BMXBMI\")] # Body Mass Index (kg/m**2): 2 YEARS - 150 YEARS\nbmx_vars <- names(bmx1)\nbmx2 <- nhanesTranslate('BMX_I', bmx_vars, data = bmx1)\n#> No translation table is available for SEQN\n#> Warning in nhanesTranslate(\"BMX_I\", bmx_vars, data = bmx1): No columns were\n#> translated\n\n\n\nB.1.3 Diabetes\nDiabetes (DIQ_H): diabetes questionnaire data must be conducted using the appropriate survey design variables, sample weights, and the basic demographic variables. Interview weights should only be used if questionnaire data are analyzed by themselves. However, if the data is joined with data from the MEC, the MEC sample weights should be used.\n\ndiq <- nhanes('DIQ_I')\ndiq1 <- diq[c(\"SEQN\", # Respondent sequence number\n              \"DIQ010\", # Doctor told you have diabetes \n              \"DIQ050\", # Taking insulin now\n              \"DIQ070\", # Take diabetic pills to lower blood sugar\n              \"DIQ175A\")] # Family history\ndiq_vars <- names(diq1)\ndiq2 <- nhanesTranslate('DIQ_I', diq_vars, data = diq1)\n#> No translation table is available for SEQN\n#> Translated columns: DIQ010 DIQ050 DIQ070\n\n\n\nB.1.4 Smoking\nSmoking - Cigarette Use (SMQ_H): Interview weights should only be used if questionnaire data are analyzed by themselves. However, if the data is joined with data from the MEC, the MEC sample weights should be used.\n\nsmq <- nhanes('SMQ_I')\nsmq1 <- smq[c(\"SEQN\", # Respondent sequence number\n              \"SMQ020\", # Smoked at least 100 cigarettes in life\n              \"SMQ040\")] # Do you now smoke cigarettes?: 18 YEARS - 150 YEARS\nsmq_vars <- names(smq1)\nsmq2 <- nhanesTranslate('SMQ_I', smq_vars, data = smq1)\n#> No translation table is available for SEQN\n#> Translated columns: SMQ020 SMQ040\n\n\n\nB.1.5 Diet\nDiet Behavior & Nutrition (DBQ_H): interview sample weights may be used in their analysis. However, if the data is joined with data from the MEC, the MEC sample weights should be used.\n\ndbq <- nhanes('DBQ_I')\ndbq1 <- dbq[c(\"SEQN\", # Respondent sequence number\n              \"DBQ700\")] # How healthy is the diet: 16 YEARS - 150 YEARS\ndbq_vars <- names(dbq1)\ndbq2 <- nhanesTranslate('DBQ_I', dbq_vars, data = dbq1)\n#> No translation table is available for SEQN\n#> Translated columns: DBQ700\n\n\n\nB.1.6 Physical activity\nPhysical Activity (PAQ_H): the interview sample weights should be used in their analysis. However, if the data is joined with data from the MEC, the MEC sample weights should be used.\n\npaq <- nhanes('PAQ_I')\npaq1 <- paq[c(\"SEQN\", # Respondent sequence number\n              \"PAQ605\")] # Vigorous work activity: 18 YEARS150 YEARS\npaq_vars <- names(paq1)\npaq2 <- nhanesTranslate('PAQ_I', paq_vars, data = paq1)\n#> No translation table is available for SEQN\n#> Translated columns: PAQ605\n\n\n\nB.1.7 Access to healthcare\nHospital Utilization & Access to Care (HUQ_H): Although these data were collected as part of the household questionnaire, if they are merged with the MEC exam data, exam sample weights should be used for the analyses.\n\nhuq <- nhanes('HUQ_I')\nhuq1 <- huq[c(\"SEQN\", # Respondent sequence number\n              \"HUQ030\")] # Routine place to go for healthcare\nhuq_vars <- names(huq1)\nhuq2 <- nhanesTranslate('HUQ_I', huq_vars, data = huq1)\n#> No translation table is available for SEQN\n#> Translated columns: HUQ030\n\n\n\nB.1.8 Blood pressure\nBlood Pressure (BPX_H): Exam sample weights should be used for analyses.\n\nSystolic blood pressure and maximum inflation level cannot be greater than 300 mmHg;\nSystolic and diastolic blood pressure measurements and the maximum inflation level can be even numbers only;\nSystolic blood pressure must be greater than diastolic blood pressure;\nIf there is no systolic blood pressure, there can be no diastolic blood pressure. (There can be a systolic measurement without a diastolic measurement.); and\nDiastolic blood pressure can be zero.\n\n\nbpx <- nhanes('BPX_I')\nbpx1 <- bpx[c(\"SEQN\", # Respondent sequence number\n              \"BPXSY1\", # Systolic Blood pres (1st rdg) mmHg: 8 - 150 YEARS\n              \"BPXSY2\", # Systolic: Blood pres (2nd rdg) mm Hg\n              \"BPXSY3\", # Systolic: Blood pres (3rd rdg) mm Hg\n              \"BPXSY4\", # Systolic: Blood pres (4th rdg) mm Hg\n              \"BPXDI1\", # Diastolic Blood pres (1st rdg) mmHg: 8 - 150 YEARS\n              \"BPXDI2\", # Diastolic: Blood pres (2nd rdg) mm Hg\n              \"BPXDI3\", # Diastolic: Blood pres (3rd rdg) mm Hg\n              \"BPXDI4\")] # Diastolic: Blood pres (4th rdg) mm Hg\nbpx_vars <- names(bpx1)\nbpx2 <- nhanesTranslate('BPX_I', bpx_vars, data = bpx1)\n#> No translation table is available for SEQN\n#> Warning in nhanesTranslate(\"BPX_I\", bpx_vars, data = bpx1): No columns were\n#> translated\n\nBlood Pressure & Cholesterol (BPQ_H): Although these data were collected as part of the household questionnaire, if they are merged with the MEC exam data, exam sample weights should be used for the analyses.\n\nbpq <- nhanes('BPQ_I')\nbpq1 <- bpq[c(\"SEQN\", # Respondent sequence number\n              \"BPQ080\")] # high cholesterol\nbpq_vars <- names(bpq1)\nbpq2 <- nhanesTranslate('BPQ_I', bpq_vars, data = bpq1)\n#> No translation table is available for SEQN\n#> Translated columns: BPQ080\n\n\n\nB.1.9 Sleep\nSleep Disorders (SLQ_H):\n\nslq <- nhanes('SLQ_I')\nslq1 <- slq[c(\"SEQN\", # Respondent sequence number\n              \"SLD012\")] # Sleep hours - weekdays or workdays\nslq_vars <- names(slq1)\nslq2 <- nhanesTranslate('SLQ_I', slq_vars, data = slq1)\n#> No translation table is available for SEQN\n#> Warning in nhanesTranslate(\"SLQ_I\", slq_vars, data = slq1): No columns were\n#> translated\n\n\n\nB.1.10 Laboratory data\nStandard Biochemistry Profile (BIOPRO_H): Exam sample weights should be used for analyses.\n\n# Standard Biochemistry Profile\nbiopro <- nhanes('BIOPRO_I') # 12 YEARS - 150 YEARS\nbiopro1 <- biopro[c(\"SEQN\", # Respondent sequence number\n                    #\"LBXSTR\", # Triglycerides, refrigerated (mg/dL)\n                    \"LBXSUA\", # Uric acid (mg/dL)\n                    \"LBXSTP\", # Total protein (g/dL)\n                    \"LBXSTB\", # Total bilirubin (mg/dL)\n                    \"LBXSPH\", # Phosphorus (mg/dL)\n                    \"LBXSNASI\", # Sodium (mmol/L)\n                    \"LBXSKSI\", # Potassium (mmol/L)\n                    \"LBXSGB\", # Globulin (g/dL)\n                    \"LBXSCA\")] # Total Calcium (mg/dL)\nbiopro_vars <- names(biopro1) \nbiopro2 <- nhanesTranslate('BIOPRO_I', biopro_vars, data = biopro1)\n#> No translation table is available for SEQN\n#> Warning in nhanesTranslate(\"BIOPRO_I\", biopro_vars, data = biopro1): No columns\n#> were translated\n\n\n\nB.1.11 ICD-10-CM codes\nPrescription Medications (RXQ_RX_H): The Prescription Medications subsection provides personal interview data on use of prescription medications during a one-month period prior to the participant’s interview date. During the household SP interview, survey participants are asked if they have taken medications in the past 30 days for which they needed a prescription. Those who answer “yes” are asked to show the interviewer the medication containers of all the products used.\n\nrxq <- nhanes('RXQ_RX_I')\nrxq10 <- rxq[c(\"SEQN\", # Respondent sequence number\n               \"RXDRSC1\")] # ICD-10-CM code 1\nrxq11 <- names(rxq10) \nrxq12 <- nhanesTranslate('RXQ_RX_I', rxq11, data = rxq10)\n#> No translation table is available for SEQN\n#> Translated columns: RXDRSC1\n\nrxq20 <- rxq[c(\"SEQN\", # Respondent sequence number\n               \"RXDRSC2\")] # ICD-10-CM code 2\nrxq21 <- names(rxq20) \nrxq22 <- nhanesTranslate('RXQ_RX_I', rxq21, data = rxq20)\n#> No translation table is available for SEQN\n#> Translated columns: RXDRSC2\n\nrxq30 <- rxq[c(\"SEQN\", # Respondent sequence number\n               \"RXDRSC3\")] # ICD-10-CM code 3\nrxq31 <- names(rxq30) \nrxq32 <- nhanesTranslate('RXQ_RX_I', rxq31, data = rxq30)\n#> No translation table is available for SEQN\n#> Translated columns: RXDRSC3"
  },
  {
    "objectID": "index15.html#merging-all-the-datasets---except-for-icd-10-codes",
    "href": "index15.html#merging-all-the-datasets---except-for-icd-10-codes",
    "title": "Appendix B — Downloading NHANES 2015-16 cycle components",
    "section": "B.2 Merging all the datasets - except for ICD-10 codes",
    "text": "B.2 Merging all the datasets - except for ICD-10 codes\n\ndat <- join_all(list(demo2, bmx2, diq2, smq2, dbq2, paq2, \n                     huq2, bpx2, bpq2, slq2, biopro2),\n                by = \"SEQN\", type='full')\nnhanes15 <- dat \n\n\nB.2.1 Save dataset for later use\n\ndim(nhanes15)\n#> [1] 9971   42\nsave(nhanes15, rxq12, rxq22, rxq32, file = \"data/analytic15.RData\")"
  },
  {
    "objectID": "index17.html#download-and-subsetting-to-retain-only-the-useful-variables",
    "href": "index17.html#download-and-subsetting-to-retain-only-the-useful-variables",
    "title": "Appendix C — Downloading NHANES 2017-18 cycle components",
    "section": "C.1 Download and Subsetting to retain only the useful variables",
    "text": "C.1 Download and Subsetting to retain only the useful variables\n\nC.1.1 Demographic\nDemographic Variables and Sample Weights (DEMO_H): The 2-year sample weights (WTINT2YR, WTMEC2YR) should be used. 15 masked variance strata and 30 masked primary sampling units (PSUs) are included in the demographics file. Each stratum has 2 PSUs.\n\ndemo <- nhanes('DEMO_J')    # Both males and females 0 YEARS - 150 YEARS\ndemo1 <- demo[c(\"SEQN\",     # Respondent sequence number\n                \"RIDAGEYR\", # Age in years at screening\n                \"RIAGENDR\", # gender\n                \"DMDEDUC2\", # Education level - Adults 20+\n                \"RIDRETH1\", # race/ethnicity\n                \"DMDMARTL\", # marital status    \n                \"INDHHIN2\", # Annual household income\n                \"DMDBORN4\", # where born\n                \"RIDEXPRG\", # Pregnancy status at exam (released for 20-44 yrs)\n                \"SDDSRVYR\", # survey cycle\n                \"WTINT2YR\", # Full sample 2 year weights\n                \"WTMEC2YR\", # Full sample 2 year MEC exam weight\n                \"SDMVPSU\",  # Masked variance pseudo-PSU\n                \"SDMVSTRA\")]# Masked variance pseudo-stratum\ndemo_vars <- names(demo1) \ndemo2 <- nhanesTranslate('DEMO_J', demo_vars, data = demo1)\n#> No translation table is available for SEQN\n#> Translated columns: RIAGENDR DMDEDUC2 RIDRETH1 DMDMARTL INDHHIN2 DMDBORN4 RIDEXPRG\n\n\n\nC.1.2 BMI\nBody Measures (BMX_H): The NHANES examination sample weights should be used to analyze the body measurement data. However, if the data is joined with data from the MEC, the MEC sample weights should be used.\n\nbmx <- nhanes('BMX_J')\nbmx1 <- bmx[c(\"SEQN\", # Respondent sequence number\n              \"BMXBMI\")] # Body Mass Index (kg/m**2): 2 YEARS - 150 YEARS\nbmx_vars <- names(bmx1)\nbmx2 <- nhanesTranslate('BMX_J', bmx_vars, data = bmx1)\n#> No translation table is available for SEQN\n#> Warning in nhanesTranslate(\"BMX_J\", bmx_vars, data = bmx1): No columns were\n#> translated\n\n\n\nC.1.3 Diabetes\nDiabetes (DIQ_H): diabetes questionnaire data must be conducted using the appropriate survey design variables, sample weights, and the basic demographic variables. Interview weights should only be used if questionnaire data are analyzed by themselves. However, if the data is joined with data from the MEC, the MEC sample weights should be used.\n\ndiq <- nhanes('DIQ_J')\ndiq1 <- diq[c(\"SEQN\", # Respondent sequence number\n              \"DIQ010\", # Doctor told you have diabetes\n              \"DIQ050\", # Taking insulin now\n              \"DIQ070\", # Take diabetic pills to lower blood sugar\n              \"DIQ175A\")] # Family history\ndiq_vars <- names(diq1)\ndiq2 <- nhanesTranslate('DIQ_J', diq_vars, data = diq1)\n#> No translation table is available for SEQN\n#> Translated columns: DIQ010 DIQ050 DIQ070 DIQ175A\n\n\n\nC.1.4 Smoking\nSmoking - Cigarette Use (SMQ_H): Interview weights should only be used if questionnaire data are analyzed by themselves. However, if the data is joined with data from the MEC, the MEC sample weights should be used.\n\nsmq <- nhanes('SMQ_J')\nsmq1 <- smq[c(\"SEQN\", # Respondent sequence number\n              \"SMQ020\", # Smoked at least 100 cigarettes in life\n              \"SMQ040\")] # Do you now smoke cigarettes?: 18 YEARS - 150 YEARS\nsmq_vars <- names(smq1)\nsmq2 <- nhanesTranslate('SMQ_J', smq_vars, data = smq1)\n#> No translation table is available for SEQN\n#> Translated columns: SMQ020 SMQ040\n\n\n\nC.1.5 Diet\nDiet Behavior & Nutrition (DBQ_H): interview sample weights may be used in their analysis. However, if the data is joined with data from the MEC, the MEC sample weights should be used.\n\ndbq <- nhanes('DBQ_J')\ndbq1 <- dbq[c(\"SEQN\", # Respondent sequence number\n              \"DBQ700\")] # How healthy is the diet: 16 YEARS - 150 YEARS\ndbq_vars <- names(dbq1)\ndbq2 <- nhanesTranslate('DBQ_J', dbq_vars, data = dbq1)\n#> No translation table is available for SEQN\n#> Translated columns: DBQ700\n\n\n\nC.1.6 Physical activity\nPhysical Activity (PAQ_H): the interview sample weights should be used in their analysis. However, if the data is joined with data from the MEC, the MEC sample weights should be used.\n\npaq <- nhanes('PAQ_J')\npaq1 <- paq[c(\"SEQN\", # Respondent sequence number\n              \"PAQ605\")] # Vigorous work activity: 18 YEARS150 YEARS\npaq_vars <- names(paq1)\npaq2 <- nhanesTranslate('PAQ_J', paq_vars, data = paq1)\n#> No translation table is available for SEQN\n#> Translated columns: PAQ605\n\n\n\nC.1.7 Access to healthcare\nHospital Utilization & Access to Care (HUQ_H): Although these data were collected as part of the household questionnaire, if they are merged with the MEC exam data, exam sample weights should be used for the analyses.\n\nhuq <- nhanes('HUQ_J')\nhuq1 <- huq[c(\"SEQN\", # Respondent sequence number\n              \"HUQ030\")] # Routine place to go for healthcare\nhuq_vars <- names(huq1)\nhuq2 <- nhanesTranslate('HUQ_J', huq_vars, data = huq1)\n#> No translation table is available for SEQN\n#> Translated columns: HUQ030\n\n\n\nC.1.8 Blood pressure\nBlood Pressure (BPX_H): Exam sample weights should be used for analyses.\n\nSystolic blood pressure and maximum inflation level cannot be greater than 300 mmHg;\nSystolic and diastolic blood pressure measurements and the maximum inflation level can be even numbers only;\nSystolic blood pressure must be greater than diastolic blood pressure;\nIf there is no systolic blood pressure, there can be no diastolic blood pressure. (There can be a systolic measurement without a diastolic measurement.); and\nDiastolic blood pressure can be zero.\n\n\nbpx <- nhanes('BPX_J')\nbpx1 <- bpx[c(\"SEQN\", # Respondent sequence number\n              \"BPXSY1\", # Systolic Blood pres (1st rdg) mmHg: 8 - 150 YEARS\n              \"BPXSY2\", # Systolic: Blood pres (2nd rdg) mm Hg\n              \"BPXSY3\", # Systolic: Blood pres (3rd rdg) mm Hg\n              \"BPXSY4\", # Systolic: Blood pres (4th rdg) mm Hg\n              \"BPXDI1\", # Diastolic Blood pres (1st rdg) mmHg: 8 - 150 YEARS\n              \"BPXDI2\", # Diastolic: Blood pres (2nd rdg) mm Hg\n              \"BPXDI3\", # Diastolic: Blood pres (3rd rdg) mm Hg\n              \"BPXDI4\")] # Diastolic: Blood pres (4th rdg) mm Hg\nbpx_vars <- names(bpx1)\nbpx2 <- nhanesTranslate('BPX_J', bpx_vars, data = bpx1)\n#> No translation table is available for SEQN\n#> Warning in nhanesTranslate(\"BPX_J\", bpx_vars, data = bpx1): No columns were\n#> translated\n\nBlood Pressure & Cholesterol (BPQ_H): Although these data were collected as part of the household questionnaire, if they are merged with the MEC exam data, exam sample weights should be used for the analyses.\n\nbpq <- nhanes('BPQ_J')\nbpq1 <- bpq[c(\"SEQN\", # Respondent sequence number\n              \"BPQ080\")] # high cholesterol\nbpq_vars <- names(bpq1)\nbpq2 <- nhanesTranslate('BPQ_J', bpq_vars, data = bpq1)\n#> No translation table is available for SEQN\n#> Translated columns: BPQ080\n\n\n\nC.1.9 Sleep\nSleep Disorders (SLQ_H):\n\nslq <- nhanes('SLQ_J')\nslq1 <- slq[c(\"SEQN\", # Respondent sequence number\n              \"SLD012\")] # Sleep hours - weekdays or workdays\nslq_vars <- names(slq1)\nslq2 <- nhanesTranslate('SLQ_J', slq_vars, data = slq1)\n#> No translation table is available for SEQN\n#> Warning in nhanesTranslate(\"SLQ_J\", slq_vars, data = slq1): No columns were\n#> translated\n\n\n\nC.1.10 Laboratory data\nStandard Biochemistry Profile (BIOPRO_H): Exam sample weights should be used for analyses.\n\n# Standard Biochemistry Profile\nbiopro <- nhanes('BIOPRO_J') # 12 YEARS - 150 YEARS\nbiopro1 <- biopro[c(\"SEQN\", # Respondent sequence number\n                    #\"LBXSTR\", # Triglycerides, refrigerated (mg/dL)\n                    \"LBXSUA\", # Uric acid (mg/dL)\n                    \"LBXSTP\", # Total protein (g/dL)\n                    \"LBXSTB\", # Total bilirubin (mg/dL)\n                    \"LBXSPH\", # Phosphorus (mg/dL)\n                    \"LBXSNASI\", # Sodium (mmol/L)\n                    \"LBXSKSI\", # Potassium (mmol/L)\n                    \"LBXSGB\", # Globulin (g/dL)\n                    \"LBXSCA\")] # Total Calcium (mg/dL)\nbiopro_vars <- names(biopro1) \nbiopro2 <- nhanesTranslate('BIOPRO_J', biopro_vars, data = biopro1)\n#> No translation table is available for SEQN\n#> Warning in nhanesTranslate(\"BIOPRO_J\", biopro_vars, data = biopro1): No columns\n#> were translated\n\n\n\nC.1.11 ICD-10-CM codes\nPrescription Medications (RXQ_RX_H): The Prescription Medications subsection provides personal interview data on use of prescription medications during a one-month period prior to the participant’s interview date. During the household SP interview, survey participants are asked if they have taken medications in the past 30 days for which they needed a prescription. Those who answer “yes” are asked to show the interviewer the medication containers of all the products used.\n\nrxq <- nhanes('RXQ_RX_J')\nrxq10 <- rxq[c(\"SEQN\", # Respondent sequence number\n               \"RXDRSC1\")] # ICD-10-CM code 1\nrxq11 <- names(rxq10) \nrxq12 <- nhanesTranslate('RXQ_RX_J', rxq11, data = rxq10)\n#> No translation table is available for SEQN\n#> Translated columns: RXDRSC1\n\nrxq20 <- rxq[c(\"SEQN\", # Respondent sequence number\n               \"RXDRSC2\")] # ICD-10-CM code 2\nrxq21 <- names(rxq20) \nrxq22 <- nhanesTranslate('RXQ_RX_J', rxq21, data = rxq20)\n#> No translation table is available for SEQN\n#> Translated columns: RXDRSC2\n\nrxq30 <- rxq[c(\"SEQN\", # Respondent sequence number\n               \"RXDRSC3\")] # ICD-10-CM code 3\nrxq31 <- names(rxq30) \nrxq32 <- nhanesTranslate('RXQ_RX_J', rxq31, data = rxq30)\n#> No translation table is available for SEQN\n#> Translated columns: RXDRSC3"
  },
  {
    "objectID": "index17.html#merging-all-the-datasets---except-for-icd-10-codes",
    "href": "index17.html#merging-all-the-datasets---except-for-icd-10-codes",
    "title": "Appendix C — Downloading NHANES 2017-18 cycle components",
    "section": "C.2 Merging all the datasets - except for ICD-10 codes",
    "text": "C.2 Merging all the datasets - except for ICD-10 codes\n\ndat <- join_all(list(demo2, bmx2, diq2, smq2, dbq2, paq2, \n                     huq2, bpx2, bpq2, slq2, biopro2),\n                by = \"SEQN\", type='full')\nnhanes17 <- dat\n\n\nC.2.1 Save dataset for later use\n\ndim(nhanes17)\n#> [1] 9254   42\nsave(nhanes17, rxq12, rxq22, rxq32, file = \"data/analytic17.RData\")"
  },
  {
    "objectID": "analytic13.html#load-downloaded-dataset",
    "href": "analytic13.html#load-downloaded-dataset",
    "title": "Appendix D — Creating analytic dataset from 2013-14 cycle",
    "section": "D.1 Load downloaded dataset",
    "text": "D.1 Load downloaded dataset\n\nload(file = \"data/analytic13.RData\")"
  },
  {
    "objectID": "analytic13.html#recoding",
    "href": "analytic13.html#recoding",
    "title": "Appendix D — Creating analytic dataset from 2013-14 cycle",
    "section": "D.2 Recoding",
    "text": "D.2 Recoding\n\nD.2.1 ID\n\ndat2 <- nhanes13\ndat2$id <- dat2$SEQN\n\n\n\nD.2.2 Demographic\n\nD.2.2.1 Age\n\ndat2$age <- dat2$RIDAGEYR\ndat2$age.cat <- car::recode(dat2$age, \" 0:19 = '<20'; 20:49 = '20-49'; 50:64 = '50-64'; \n                            65:80 = '65+'; else = NA \")\ndat2$age.cat <- factor(dat2$age.cat, levels = c(\"<20\", \"20-49\", \"50-64\", \"65+\"))\ntable(dat2$age.cat, useNA = \"always\")\n#> \n#>   <20 20-49 50-64   65+  <NA> \n#>  4406  2989  1474  1306     0\n\n\n\nD.2.2.2 Sex\n\ndat2$sex <- dat2$RIAGENDR\ntable(dat2$sex, useNA = \"always\")\n#> \n#>   Male Female   <NA> \n#>   5003   5172      0\n\n\n\nD.2.2.3 Education\n\ndat2$education <- dat2$DMDEDUC2\ndat2$education <- as.factor(dat2$education)\ndat2$education <- car::recode(dat2$education, recodes = \" c('College graduate or above') = \n'College graduate or above'; c('Some college or AA degree', 'High school graduate/GED or equi') = \n'High school'; c('Less than 9th grade', '9-11th grade (Includes 12th grad') = \n'Less than high school'; else = NA \")\ndat2$education <- factor(dat2$education, \n                         levels = c(\"Less than high school\", \"High school\", \n                                    \"College graduate or above\"))\ntable(dat2$education, useNA = \"always\")\n#> \n#>     Less than high school               High school College graduate or above \n#>                      1246                      3073                      1443 \n#>                      <NA> \n#>                      4413\n\n\n\nD.2.2.4 Race/ethnicity\n\ndat2$race <- dat2$RIDRETH1\ndat2$race <- car::recode(dat2$race, recodes = \" 'Non-Hispanic White'='White';\n                    'Non-Hispanic Black'='Black'; c('Mexican American',\n                    'Other Hispanic')= 'Hispanic'; else='Others' \")\ndat2$race <- factor(dat2$race, levels = c(\"White\", \"Black\", \"Hispanic\", \"Others\"))\ntable(dat2$race, useNA = \"always\")\n#> \n#>    White    Black Hispanic   Others     <NA> \n#>     3674     2267     2690     1544        0\n\n\n\nD.2.2.5 Marital status\n\ndat2$marital <- dat2$DMDMARTL\ndat2$marital <- car::recode(dat2$marital, recodes = \" 'Never married'='Never married';\nc('Married', 'Living with partner') = 'Married/with partner'; \n                            c('Widowed', 'Divorced', 'Separated')='Other'; else=NA \")\ndat2$marital <- factor(dat2$marital, levels = c(\"Never married\", \"Married/with partner\",\n                                                \"Other\"))\ntable(dat2$marital, useNA = \"always\")\n#> \n#>        Never married Married/with partner                Other \n#>                 1112                 3382                 1272 \n#>                 <NA> \n#>                 4409\n\n\n\nD.2.2.6 Income\n\ndat2$income <- dat2$INDHHIN2\ndat2$income  <- car::recode(dat2$income, recodes = \" c('$ 0 to $ 4,999', '$ 5,000 to $ 9,999',\n'$10,000 to $14,999', '$15,000 to $19,999', 'Under $20,000')='less than $20,000';\n                       c('Over $20,000','$20,000 and Over', '$20,000 to $24,999', \n                       '$25,000 to $34,999', '$35,000 to $44,999', '$45,000 to $54,999', \n                       '$55,000 to $64,999', '$65,000 to $74,999')='$20,000 to $74,999';\n                       c('$75,000 to $99,999','$100,000 and Over')='$75,000 and Over'; \n                            else=NA \")\ndat2$income  <- factor(dat2$income , levels=c(\"less than $20,000\", \"$20,000 to $74,999\", \n                                              \"$75,000 and Over\"))\ntable(dat2$income, useNA = \"always\")\n#> \n#>  less than $20,000 $20,000 to $74,999   $75,000 and Over               <NA> \n#>               2110               4964               2641                460\n\n\n\nD.2.2.7 Where born / citizenship\n\ndat2$born <- dat2$DMDBORN4\ndat2$born <- car::recode(dat2$born, recodes = \" 'Others'='Other place';\n                       'Born in 50 US states or Washingt'= 'Born in US'; else=NA\")\ndat2$born <- factor(dat2$born, levels = c(\"Born in US\", \"Other place\"))\ntable(dat2$born, useNA = \"always\") \n#> \n#>  Born in US Other place        <NA> \n#>        8262        1908           5\n\n\n\nD.2.2.8 Pregnancy\n\ndat2$pregnancy <- dat2$RIDEXPRG\ndat2$pregnancy <- car::recode(dat2$pregnancy, \n                      recodes = \" 'Yes, positive lab pregnancy test' = 'Yes';\n                       'The participant was not pregnant' = 'No'; \n                       'Cannot ascertain if the particip' = 'inconclusive';\n                       else= 'outside of target population'  \")\ntable(dat2$pregnancy, useNA = \"always\") \n#> \n#>                 inconclusive                           No \n#>                           94                         1150 \n#> outside of target population                          Yes \n#>                         8866                           65 \n#>                         <NA> \n#>                            0\n\n\n\n\nD.2.3 BMI\n\nD.2.3.1 BMI and Obesity\n\ndat2$bmi <- dat2$BMXBMI\nsummary(dat2$bmi)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>   12.10   19.70   24.70   25.68   30.20   82.90    1120\ndat2$obese <- ifelse(dat2$BMXBMI >= 30, \"Yes\", \"No\")\ndat2$obese <- factor(dat2$obese, levels = c(\"No\", \"Yes\"))\ntable(dat2$obese, useNA = \"always\")\n#> \n#>   No  Yes <NA> \n#> 6708 2347 1120\n\n\n\n\nD.2.4 Diabetes\n\ndat2$diabetes <- dat2$DIQ010\ndat2$diabetes <- car::recode(dat2$diabetes, \" 'Yes'='Yes'; c('No','Borderline')='No';\n                             else=NA \")\n\n# Taking insulin now or diabetic pills to lower blood sugar - they have diabetes\ndat2$diabetes[dat2$DIQ050 == \"Yes\"] <- \"Yes\"\ndat2$diabetes[dat2$DIQ070 == \"Yes\"] <- \"Yes\"\ntable(dat2$diabetes, useNA = \"always\")\n#> \n#>   No  Yes <NA> \n#> 8981  782  412\n\n\n\nD.2.5 Family history of diabetes\n\ndat2$diabetes.family.history <- car::recode(dat2$DIQ175A, \" 'Family history' = 'Yes'; \n                             else = 'No' \")\ndat2$diabetes.family.history <- factor(dat2$diabetes.family.history, levels = c(\"No\", \"Yes\"))\ndat2$diabetes.family.history[dat2$DIQ175A==\"Don't know\"] <- NA\ntable(dat2$diabetes.family.history, useNA = \"always\")\n#> \n#>   No  Yes <NA> \n#> 8837 1337    1\n\n\n\nD.2.6 Smoking\n\ndat2$smoking <- dat2$SMQ020\ndat2$smoking <- car::recode(dat2$smoking, \" 'Yes' = 'Current smoker'; 'No' = 'Never smoker'; else=NA  \")\ndat2$smoking <- factor(dat2$smoking, levels = c(\"Never smoker\", \"Previous smoker\", \"Current smoker\"))\ndat2$smoking[dat2$SMQ040 == \"Not at all\"] <- \"Previous smoker\"\ntable(dat2$smoking, useNA = \"always\")\n#> \n#>    Never smoker Previous smoker  Current smoker            <NA> \n#>            3532            1347            1232            4064\n\n\n\nD.2.7 Diet\n\nD.2.7.1 How healthy is the diet\n\ndat2$diet.healthy <- dat2$DBQ700\ndat2$diet.healthy <- car::recode(dat2$diet.healthy, recodes = \" c('Excellent', 'Very good')=\n                    'Very good or excellent'; 'Good'='Good'; c('Fair', 'Poor')=\n                    'Poor or fair'; else = NA \")\ndat2$diet.healthy <- factor(dat2$diet.healthy, levels = c(\"Poor or fair\", \"Good\", \n                                                          \"Very good or excellent\"))\ntable(dat2$diet.healthy, useNA = \"always\")\n#> \n#>           Poor or fair                   Good Very good or excellent \n#>                   1824                   2743                   1896 \n#>                   <NA> \n#>                   3712\n\n\n\n\nD.2.8 Vigorous physical activity\n\ndat2$physical.activity <- dat2$PAQ605\ndat2$physical.activity <- car::recode(dat2$physical.activity, recodes = \" 'No' = 'No'; \n                                      'Yes' = 'Yes'; else=NA\")\ndat2$physical.activity <- factor(dat2$physical.activity, levels = c(\"No\", \"Yes\"))\ntable(dat2$physical.activity, useNA = \"always\")\n#> \n#>   No  Yes <NA> \n#> 5975 1172 3028\n\n\n\nD.2.9 Access to medical services\n\ndat2$medical.access <- dat2$HUQ030\ndat2$medical.access <- car::recode(dat2$medical.access, recodes = \" c('Yes',\n                              'There is more than one place')='Yes'; 'There is no place'=\n                              'No'; else=NA\")\ntable(dat2$medical.access, useNA = \"always\")\n#> \n#>   No  Yes <NA> \n#> 1194 8981    0\n\n\n\nD.2.10 Hypertension/high blood pressure\n\nD.2.10.1 Systolic BP\n\ndat2$systolic1 <- dat2$BPXSY1\ndat2$systolic2 <- dat2$BPXSY2\ndat2$systolic3 <- dat2$BPXSY3\ndat2$systolic4 <- dat2$BPXSY4\n\ndat2 <- dat2 %>% \n  mutate(systolicBP = rowMeans(dat2[, c(\"systolic1\", \"systolic2\", \n                                        \"systolic3\", \"systolic4\")], \n                             na.rm = TRUE))\nsummary(dat2$systolicBP)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>   64.67  106.00  115.33  118.31  128.00  228.67    2644\n\n\n\nD.2.10.2 Diastolic BP\n\ndat2$diastolic1 <- dat2$BPXDI1\ndat2$diastolic2 <- dat2$BPXDI2\ndat2$diastolic3 <- dat2$BPXDI3\ndat2$diastolic4 <- dat2$BPXDI4\ndatX <- dat2[, c(\"diastolic1\", \"diastolic2\", \n                 \"diastolic3\", \"diastolic4\")]\ndatX[datX ==0] <- NA\ndat2$diastolicBP <- rowMeans(datX[, c(\"diastolic1\", \"diastolic2\", \n                                      \"diastolic3\", \"diastolic4\")], \n                             na.rm = TRUE)\nsummary(dat2$diastolicBP)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>   3.333  58.000  66.667  66.329  74.667 128.000    2688\n\n\n\n\nD.2.11 Sleep (daily in hours)\n\ndat2$sleep <- dat2$SLD010H\ndat2$sleep[dat2$sleep == 99] <- NA\nsummary(dat2$sleep)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>   2.000   6.000   7.000   6.951   8.000  12.000    3721\n\n\n\nD.2.12 Laboratory data\n\nD.2.12.1 Uric acid (mg/dL)\n\ndat2$uric.acid <- dat2$LBXSUA\nsummary(dat2$uric.acid)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>    0.70    4.30    5.20    5.35    6.20   13.30    3624\n\n\n\nD.2.12.2 Total protein (g/dL)\n\ndat2$protein.total <- dat2$LBXSTP\nsummary(dat2$protein.total)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>   4.700   6.800   7.100   7.108   7.400  10.200    3631\n\n\n\nD.2.12.3 Total bilirubin (mg/dL)\n\ndat2$bilirubin.total <- dat2$LBXSTB\nsummary(dat2$bilirubin.total)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>   0.100   0.400   0.600   0.639   0.800   7.100    3626\n\n\n\nD.2.12.4 Phosphorus (mg/dL)\n\ndat2$phosphorus <- dat2$LBXSPH\nsummary(dat2$phosphorus)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>   1.800   3.500   3.900   3.929   4.300  10.900    3623\n\n\n\nD.2.12.5 Sodium (mmol/L)\n\ndat2$sodium <- dat2$LBXSNASI\nsummary(dat2$sodium)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>   119.0   139.0   140.0   139.8   141.0   154.0    3622\n\n\n\nD.2.12.6 Potassium (mmol/L)\n\ndat2$potassium <- dat2$LBXSKSI\nsummary(dat2$potassium)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>   2.800   3.800   4.000   4.027   4.200   5.800    3623\n\n\n\nD.2.12.7 Globulin (g/dL)\n\ndat2$globulin <- dat2$LBXSGB\nsummary(dat2$globulin)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>   1.400   2.500   2.800   2.826   3.100   6.500    3631\n\n\n\nD.2.12.8 Total calcium (mg/dL)\n\ndat2$calcium.total <- dat2$LBXSCA\nsummary(dat2$calcium.total)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>   7.600   9.200   9.500   9.486   9.700  14.800    3664\n\n\n\nD.2.12.9 High cholesterol\n\ndat2$high.cholesterol <- dat2$BPQ080\ndat2$high.cholesterol <- car::recode(dat2$high.cholesterol, recodes = \" 'Yes'='Yes';\n                                     'No'='No'; else = NA\")\ntable(dat2$high.cholesterol, useNA = \"always\")\n#> \n#>   No  Yes <NA> \n#> 4391 2037 3747\n\n\n\n\nD.2.13 Survey features\n\nD.2.13.1 Weight\n\ndat2$survey.weight <- dat2$WTINT2YR\nsummary(dat2$survey.weight)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n#>    3698   12754   20233   30585   36280  167885\ndat2$survey.weight.mec <- dat2$WTMEC2YR\nsummary(dat2$survey.weight.mec)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n#>       0   12562   20175   30585   36748  171395\n\n\n\nD.2.13.2 PSU\n\ndat2$psu <- as.factor(dat2$SDMVPSU)\ntable(dat2$psu)\n#> \n#>    1    2 \n#> 5249 4926\n\n\n\nD.2.13.3 Strata\n\ndat2$strata <- as.factor(dat2$SDMVSTRA)\ntable(dat2$strata)\n#> \n#> 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 \n#> 674 646 671 732 674 752 664 663 723 665 741 681 700 500 689\n\n\n\n\nD.2.14 Survey year\n\ndat2$year <- dat2$SDDSRVYR\ntable(dat2$year, useNA = \"always\") \n#> \n#>     8  <NA> \n#> 10175     0\n\n\n\nD.2.15 ICD-10-CM codes\n\ncolnames(rxq12) <- c(\"id\", \"icd10\")\ncolnames(rxq22) <- c(\"id\", \"icd10\")\ncolnames(rxq32) <- c(\"id\", \"icd10\")\n\nrx2013 <- rbind(rxq12, rxq22, rxq32)\nrx2013 <- rx2013[order(rx2013$id),]\n\nrx2013$icd10[rx2013$icd10 == \"Unknown\"] <- NA\nrx2013$icd10[rx2013$icd10 == \"Refused\"] <- NA\nrx2013$icd10[rx2013$icd10 == \"Don't know\"] <- NA\nrx2013$icd10[rx2013$icd10 == \"\"] <- NA\nrx2013$icd10.new <- substr(rx2013$icd10, start = 1, stop = 3)\n\nrx2013 <- na.omit(rx2013)"
  },
  {
    "objectID": "analytic13.html#analytic-data",
    "href": "analytic13.html#analytic-data",
    "title": "Appendix D — Creating analytic dataset from 2013-14 cycle",
    "section": "D.3 Analytic data",
    "text": "D.3 Analytic data\n\nD.3.1 Full dataset\n\nnhanes13r <- dat2\n\n\n\nD.3.2 Analytic datset - adults 20 years of more\n\nvars <- c(\n  # ID\n  \"id\",\n  \n  # Demographic\n  \"age\", \"age.cat\", \"sex\", \"education\", \"race\", \n  \"marital\", \"income\", \"born\", \"pregnancy\",\n  \n  # obesity\n  \"obese\", \n  \n  # Diabetes\n  \"diabetes\", \"diabetes.family.history\",\n  \n  # Smoking\n  \"smoking\", \n  \n  # Diet\n  \"diet.healthy\", \n\n  # Physical activity\n  \"physical.activity\", \n  \n  # Access to routine healthcare\n  \"medical.access\",\n  \n  # Blood pressure and Hypertension\n  \"systolicBP\", \"diastolicBP\", \n  \n  # Sleep \n  \"sleep\",\n\n  # Laboratory \n  \"uric.acid\", \"protein.total\", \"bilirubin.total\", \"phosphorus\",\n  \"sodium\", \"potassium\", \"globulin\", \"calcium.total\", \n  \"high.cholesterol\",\n  \n  # Survey features\n  \"survey.weight\", \"survey.weight.mec\", \"psu\", \"strata\", \n  \n  # Survey year\n  \"year\"\n)\n\nnhanes13r.sel <- nhanes13r[, vars]\n\n\n# Adults 20 years of more and not pregnant\ndim(nhanes13r.sel)\n#> [1] 10175    34\nanalytic13 <- subset(nhanes13r.sel, age >= 20 & \n                       pregnancy != 'yes')\ndim(analytic13)\n#> [1] 5769   34\n\n\n\nD.3.3 Save dataset for later use\n\ndim(analytic13)\n#> [1] 5769   34\ndim(rx2013)\n#> [1] 14474     3\nsave(analytic13, rx2013, file = \"data/analytic13recoded.RData\")"
  },
  {
    "objectID": "analytic15.html#load-downloaded-dataset",
    "href": "analytic15.html#load-downloaded-dataset",
    "title": "Appendix E — Creating analytic dataset from 2015-16 cycle",
    "section": "E.1 Load downloaded dataset",
    "text": "E.1 Load downloaded dataset\n\nload(file = \"data/analytic15.RData\")"
  },
  {
    "objectID": "analytic15.html#recoding",
    "href": "analytic15.html#recoding",
    "title": "Appendix E — Creating analytic dataset from 2015-16 cycle",
    "section": "E.2 Recoding",
    "text": "E.2 Recoding\n\nE.2.1 ID\n\ndat2 <- nhanes15\ndat2$id <- dat2$SEQN\n\n\n\nE.2.2 Demographic\n\nE.2.2.1 Age\n\ndat2$age <- dat2$RIDAGEYR\ndat2$age.cat <- car::recode(dat2$age, \" 0:19 = '<20'; 20:49 = '20-49'; 50:64 = '50-64'; \n                            65:80 = '65+'; else = NA \")\ndat2$age.cat <- factor(dat2$age.cat, levels = c(\"<20\", \"20-49\", \"50-64\", \"65+\"))\ntable(dat2$age.cat, useNA = \"always\")\n#> \n#>   <20 20-49 50-64   65+  <NA> \n#>  4252  2894  1447  1378     0\n\n\n\nE.2.2.2 Sex\n\ndat2$sex <- dat2$RIAGENDR\ntable(dat2$sex, useNA = \"always\")\n#> \n#>   Male Female   <NA> \n#>   4892   5079      0\n\n\n\nE.2.2.3 Education\n\ndat2$education <- dat2$DMDEDUC2\ndat2$education <- as.factor(dat2$education)\ndat2$education <- car::recode(dat2$education, recodes = \" c('College graduate or above') = \n'College graduate or above'; c('Some college or AA degree', 'High school graduate/GED or equi') = \n'High school'; c('Less than 9th grade', '9-11th grade (Includes 12th grad') = \n'Less than high school'; else = NA \")\ndat2$education <- factor(dat2$education, \n                         levels = c(\"Less than high school\", \"High school\", \n                                    \"College graduate or above\"))\ntable(dat2$education, useNA = \"always\")\n#> \n#>     Less than high school               High school College graduate or above \n#>                      1364                      2928                      1422 \n#>                      <NA> \n#>                      4257\n\n\n\nE.2.2.4 Race/ethnicity\n\ndat2$race <- dat2$RIDRETH1\ndat2$race <- car::recode(dat2$race, recodes = \" 'Non-Hispanic White'='White';\n                    'Non-Hispanic Black'='Black'; c('Mexican American',\n                    'Other Hispanic')= 'Hispanic'; else='Others' \")\ndat2$race <- factor(dat2$race, levels = c(\"White\", \"Black\", \"Hispanic\", \"Others\"))\ntable(dat2$race, useNA = \"always\")\n#> \n#>    White    Black Hispanic   Others     <NA> \n#>     3066     2129     3229     1547        0\n\n\n\nE.2.2.5 Marital status\n\ndat2$marital <- dat2$DMDMARTL\ndat2$marital <- car::recode(dat2$marital, recodes = \" 'Never married'='Never married';\nc('Married', 'Living with partner') = 'Married/with partner'; \n                            c('Widowed', 'Divorced', 'Separated')='Other'; else=NA \")\ndat2$marital <- factor(dat2$marital, levels = c(\"Never married\", \"Married/with partner\",\n                                                \"Other\"))\ntable(dat2$marital, useNA = \"always\")\n#> \n#>        Never married Married/with partner                Other \n#>                 1048                 3441                 1227 \n#>                 <NA> \n#>                 4255\n\n\n\nE.2.2.6 Income\n\ndat2$income <- dat2$INDHHIN2\ndat2$income  <- car::recode(dat2$income, recodes = \" c('$ 0 to $ 4,999', '$ 5,000 to $ 9,999',\n'$10,000 to $14,999', '$15,000 to $19,999', 'Under $20,000')='less than $20,000';\n                       c('Over $20,000','$20,000 and Over', '$20,000 to $24,999', \n                       '$25,000 to $34,999', '$35,000 to $44,999', '$45,000 to $54,999', \n                       '$55,000 to $64,999', '$65,000 to $74,999')='$20,000 to $74,999';\n                       c('$75,000 to $99,999','$100,000 and Over')='$75,000 and Over'; \n                            else=NA \")\ndat2$income  <- factor(dat2$income , levels=c(\"less than $20,000\", \"$20,000 to $74,999\", \n                                              \"$75,000 and Over\"))\ntable(dat2$income, useNA = \"always\")\n#> \n#>  less than $20,000 $20,000 to $74,999   $75,000 and Over               <NA> \n#>               1906               4812               2554                699\n\n\n\nE.2.2.7 Where born / citizenship\n\ndat2$born <- dat2$DMDBORN4\ndat2$born <- car::recode(dat2$born, recodes = \" 'Others'='Other place';\n                       'Born in 50 US states or Washingt'= 'Born in US'; else=NA\")\ndat2$born <- factor(dat2$born, levels = c(\"Born in US\", \"Other place\"))\ntable(dat2$born, useNA = \"always\") \n#> \n#>  Born in US Other place        <NA> \n#>        7733        2236           2\n\n\n\nE.2.2.8 Pregnancy\n\ndat2$pregnancy <- dat2$RIDEXPRG\ndat2$pregnancy <- car::recode(dat2$pregnancy, \n                      recodes = \" 'Yes, positive lab pregnancy test' = 'Yes';\n                       'The participant was not pregnant' = 'No'; \n                       'Cannot ascertain if the particip' = 'inconclusive';\n                       else= 'outside of target population'  \")\ntable(dat2$pregnancy, useNA = \"always\") \n#> \n#>                 inconclusive                           No \n#>                           93                         1125 \n#> outside of target population                          Yes \n#>                         8683                           70 \n#>                         <NA> \n#>                            0\n\n\n\n\nE.2.3 BMI\n\nE.2.3.1 BMI and Obesity\n\ndat2$bmi <- dat2$BMXBMI\nsummary(dat2$bmi)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>   11.50   19.90   25.20   26.02   30.60   67.30    1215\ndat2$obese <- ifelse(dat2$BMXBMI >= 30, \"Yes\", \"No\")\ndat2$obese <- factor(dat2$obese, levels = c(\"No\", \"Yes\"))\ntable(dat2$obese, useNA = \"always\")\n#> \n#>   No  Yes <NA> \n#> 6346 2410 1215\n\n\n\n\nE.2.4 Diabetes\n\ndat2$diabetes <- dat2$DIQ010\ndat2$diabetes <- car::recode(dat2$diabetes, \" 'Yes'='Yes'; c('No','Borderline')='No';\n                             else=NA \")\n\n# Taking insulin now or diabetic pills to lower blood sugar - they have diabetes\ndat2$diabetes[dat2$DIQ050 == \"Yes\"] <- \"Yes\"\ndat2$diabetes[dat2$DIQ070 == \"Yes\"] <- \"Yes\"\ntable(dat2$diabetes, useNA = \"always\")\n#> \n#>   No  Yes <NA> \n#> 8648  923  400\n\n\n\nE.2.5 Family history of diabetes\n\ntable(dat2$DIQ175A, useNA = \"always\")\n#> \n#>   10 <NA> \n#> 1186 8785\ndat2$diabetes.family.history <- dat2$DIQ175A\ndat2$diabetes.family.history <- car::recode(dat2$diabetes.family.history, \" 10 = 'Yes'; \n                             else = 'No' \")\ndat2$diabetes.family.history <- factor(dat2$diabetes.family.history, levels = c(\"No\", \"Yes\"))\ndat2$diabetes.family.history[dat2$DIQ175A==\"Don't know\"] <- NA\ntable(dat2$diabetes.family.history, useNA = \"always\")\n#> \n#>   No  Yes <NA> \n#> 8785 1186    0\n\n\n\nE.2.6 Smoking\n\ndat2$smoking <- dat2$SMQ020\ndat2$smoking <- car::recode(dat2$smoking, \" 'Yes' = 'Current smoker'; 'No' = 'Never smoker'; else=NA  \")\ndat2$smoking <- factor(dat2$smoking, levels = c(\"Never smoker\", \"Previous smoker\", \"Current smoker\"))\ndat2$smoking[dat2$SMQ040 == \"Not at all\"] <- \"Previous smoker\"\ntable(dat2$smoking, useNA = \"always\")\n#> \n#>    Never smoker Previous smoker  Current smoker            <NA> \n#>            3559            1322            1100            3990\n\n\n\nE.2.7 Diet\n\nE.2.7.1 How healthy is the diet\n\ndat2$diet.healthy <- dat2$DBQ700\ndat2$diet.healthy <- car::recode(dat2$diet.healthy, recodes = \" c('Excellent', 'Very good')=\n                    'Very good or excellent'; 'Good'='Good'; c('Fair', 'Poor')=\n                    'Poor or fair'; else = NA \")\ndat2$diet.healthy <- factor(dat2$diet.healthy, levels = c(\"Poor or fair\", \"Good\", \n                                                          \"Very good or excellent\"))\ntable(dat2$diet.healthy, useNA = \"always\")\n#> \n#>           Poor or fair                   Good Very good or excellent \n#>                   2105                   2524                   1697 \n#>                   <NA> \n#>                   3645\n\n\n\n\nE.2.8 Vigorous physical activity\n\ndat2$physical.activity <- dat2$PAQ605\ndat2$physical.activity <- car::recode(dat2$physical.activity, recodes = \" 'No' = 'No'; \n                                      'Yes' = 'Yes'; else=NA\")\ndat2$physical.activity <- factor(dat2$physical.activity, levels = c(\"No\", \"Yes\"))\ntable(dat2$physical.activity, useNA = \"always\")\n#> \n#>   No  Yes <NA> \n#> 5596 1366 3009\n\n\n\nE.2.9 Access to medical services\n\ndat2$medical.access <- dat2$HUQ030\ndat2$medical.access <- car::recode(dat2$medical.access, recodes = \" c('Yes',\n                              'There is more than one place')='Yes'; 'There is no place'=\n                              'No'; else=NA\")\ntable(dat2$medical.access, useNA = \"always\")\n#> \n#>   No  Yes <NA> \n#> 1340 8631    0\n\n\n\nE.2.10 Hypertension/high blood pressure\n\nE.2.10.1 Systolic BP\n\ndat2$systolic1 <- dat2$BPXSY1\ndat2$systolic2 <- dat2$BPXSY2\ndat2$systolic3 <- dat2$BPXSY3\ndat2$systolic4 <- dat2$BPXSY4\n\ndat2 <- dat2 %>% \n  mutate(systolicBP = rowMeans(dat2[, c(\"systolic1\", \"systolic2\", \n                                        \"systolic3\", \"systolic4\")], \n                             na.rm = TRUE))\nsummary(dat2$systolicBP)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>    74.0   107.3   117.3   120.4   130.0   231.3    2608\n\n\n\nE.2.10.2 Diastolic BP\n\ndat2$diastolic1 <- dat2$BPXDI1\ndat2$diastolic2 <- dat2$BPXDI2\ndat2$diastolic3 <- dat2$BPXDI3\ndat2$diastolic4 <- dat2$BPXDI4\ndatX <- dat2[, c(\"diastolic1\", \"diastolic2\", \n                 \"diastolic3\", \"diastolic4\")]\ndatX[datX ==0] <- NA\ndat2$diastolicBP <- rowMeans(datX[, c(\"diastolic1\", \"diastolic2\", \n                                      \"diastolic3\", \"diastolic4\")], \n                             na.rm = TRUE)\nsummary(dat2$diastolicBP)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>    2.00   58.00   66.67   66.64   74.67  138.67    2636\n\n\n\n\nE.2.11 Sleep (daily in hours)\n\ndat2$sleep <- dat2$SLD012\nsummary(dat2$sleep)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>   2.000   7.000   8.000   7.753   8.500  14.500    3677\n\n\n\nE.2.12 Laboratory data\n\nE.2.12.1 Uric acid (mg/dL)\n\ndat2$uric.acid <- dat2$LBXSUA\nsummary(dat2$uric.acid)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>   1.600   4.300   5.200   5.335   6.200  18.000    3717\n\n\n\nE.2.12.2 Total protein (g/dL)\n\ndat2$protein.total <- dat2$LBXSTP\nsummary(dat2$protein.total)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>   5.200   6.900   7.200   7.201   7.500  10.100    3718\n\n\n\nE.2.12.3 Total bilirubin (mg/dL)\n\ndat2$bilirubin.total <- dat2$LBXSTB\nsummary(dat2$bilirubin.total)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>   0.000   0.400   0.500   0.552   0.700   3.500    3717\n\n\n\nE.2.12.4 Phosphorus (mg/dL)\n\ndat2$phosphorus <- dat2$LBXSPH\nsummary(dat2$phosphorus)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>   1.000   3.400   3.800   3.796   4.200   9.700    3715\n\n\n\nE.2.12.5 Sodium (mmol/L)\n\ndat2$sodium <- dat2$LBXSNASI\nsummary(dat2$sodium)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>   124.0   137.0   139.0   138.7   140.0   161.0    3714\n\n\n\nE.2.12.6 Potassium (mmol/L)\n\ndat2$potassium <- dat2$LBXSKSI\nsummary(dat2$potassium)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>   2.600   3.740   3.930   3.952   4.150   5.860    3714\n\n\n\nE.2.12.7 Globulin (g/dL)\n\ndat2$globulin <- dat2$LBXSGB\nsummary(dat2$globulin)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>   0.600   2.600   2.800   2.857   3.100   7.000    3719\n\n\n\nE.2.12.8 Total calcium (mg/dL)\n\ndat2$calcium.total <- dat2$LBXSCA\nsummary(dat2$calcium.total)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>   7.300   9.100   9.400   9.375   9.600  11.500    3714\n\n\n\nE.2.12.9 High cholesterol\n\ndat2$high.cholesterol <- dat2$BPQ080\ndat2$high.cholesterol <- car::recode(dat2$high.cholesterol, recodes = \" 'Yes'='Yes';\n                                     'No'='No'; else = NA\")\ntable(dat2$high.cholesterol, useNA = \"always\")\n#> \n#>   No  Yes <NA> \n#> 4323 1960 3688\n\n\n\n\nE.2.13 Survey features\n\nE.2.13.1 Weight\n\ndat2$survey.weight <- dat2$WTINT2YR\nsummary(dat2$survey.weight)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n#>    3294   12878   20160   31740   33257  233756\ndat2$survey.weight.mec <- dat2$WTMEC2YR\nsummary(dat2$survey.weight.mec)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n#>       0   12551   20281   31740   33708  242387\n\n\n\nE.2.13.2 PSU\n\ndat2$psu <- as.factor(dat2$SDMVPSU)\ntable(dat2$psu)\n#> \n#>    1    2 \n#> 5127 4844\n\n\n\nE.2.13.3 Strata\n\ndat2$strata <- as.factor(dat2$SDMVSTRA)\ntable(dat2$strata)\n#> \n#> 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 \n#> 462 685 694 629 612 571 673 723 665 688 681 759 805 773 551\n\n\n\n\nE.2.14 Survey year\n\ndat2$year <- dat2$SDDSRVYR\ntable(dat2$year, useNA = \"always\") \n#> \n#>    9 <NA> \n#> 9971    0\n\n\n\nE.2.15 ICD-10-CM codes\n\ncolnames(rxq12) <- c(\"id\", \"icd10\")\ncolnames(rxq22) <- c(\"id\", \"icd10\")\ncolnames(rxq32) <- c(\"id\", \"icd10\")\n\nrx2015 <- rbind(rxq12, rxq22, rxq32)\nrx2015 <- rx2015[order(rx2015$id),]\n\nrx2015$icd10[rx2015$icd10 == \"Unknown\"] <- NA\nrx2015$icd10[rx2015$icd10 == \"Refused\"] <- NA\nrx2015$icd10[rx2015$icd10 == \"Don't know\"] <- NA\nrx2015$icd10[rx2015$icd10 == \"\"] <- NA\nrx2015$icd10.new <- substr(rx2015$icd10, start = 1, stop = 3)\n\nrx2015 <- na.omit(rx2015)"
  },
  {
    "objectID": "analytic15.html#analytic-data",
    "href": "analytic15.html#analytic-data",
    "title": "Appendix E — Creating analytic dataset from 2015-16 cycle",
    "section": "E.3 Analytic data",
    "text": "E.3 Analytic data\n\nE.3.1 Full dataset\n\nnhanes15r <- dat2\n\n\n\nE.3.2 Analytic datset - adults 20 years of more\n\nvars <- c(\n  # ID\n  \"id\",\n  \n  # Demographic\n  \"age\", \"age.cat\", \"sex\", \"education\", \"race\", \n  \"marital\", \"income\", \"born\", \"pregnancy\",\n  \n  # obesity\n  \"obese\", \n  \n  # Diabetes\n  \"diabetes\", \"diabetes.family.history\",\n  \n  # Smoking\n  \"smoking\", \n  \n  # Diet\n  \"diet.healthy\", \n\n  # Physical activity\n  \"physical.activity\", \n  \n  # Access to routine healthcare\n  \"medical.access\",\n  \n  # Blood pressure and Hypertension\n  \"systolicBP\", \"diastolicBP\", \n  \n  # Sleep \n  \"sleep\",\n\n  # Laboratory \n  \"uric.acid\", \"protein.total\", \"bilirubin.total\", \"phosphorus\",\n  \"sodium\", \"potassium\", \"globulin\", \"calcium.total\", \n  \"high.cholesterol\",\n  \n  # Survey features\n  \"survey.weight\", \"survey.weight.mec\", \"psu\", \"strata\", \n  \n  # Survey year\n  \"year\"\n)\n\nnhanes15r.sel <- nhanes15r[, vars]\n\n\n# Adults 20 years of more and not pregnant\ndim(nhanes15r.sel)\n#> [1] 9971   34\nanalytic15 <- subset(nhanes15r.sel, age >= 20 & \n                       pregnancy != 'yes')\ndim(analytic15)\n#> [1] 5719   34\n\n\n\nE.3.3 Save dataset for later use\n\ndim(analytic15)\n#> [1] 5719   34\ndim(rx2015)\n#> [1] 14084     3\nsave(analytic15, rx2015, file = \"data/analytic15recoded.RData\")"
  },
  {
    "objectID": "analytic17.html#load-downloaded-dataset",
    "href": "analytic17.html#load-downloaded-dataset",
    "title": "Appendix F — Creating analytic dataset from 2017-18 cycle",
    "section": "F.1 Load downloaded dataset",
    "text": "F.1 Load downloaded dataset\n\nload(file = \"data/analytic17.RData\")"
  },
  {
    "objectID": "analytic17.html#recoding",
    "href": "analytic17.html#recoding",
    "title": "Appendix F — Creating analytic dataset from 2017-18 cycle",
    "section": "F.2 Recoding",
    "text": "F.2 Recoding\n\nF.2.1 ID\n\ndat2 <- nhanes17\ndat2$id <- dat2$SEQN\n\n\n\nF.2.2 Demographic\n\nF.2.2.1 Age\n\ndat2$age <- dat2$RIDAGEYR\ndat2$age.cat <- car::recode(dat2$age, \" 0:19 = '<20'; 20:49 = '20-49'; 50:64 = '50-64'; \n                            65:80 = '65+'; else = NA \")\ndat2$age.cat <- factor(dat2$age.cat, levels = c(\"<20\", \"20-49\", \"50-64\", \"65+\"))\ntable(dat2$age.cat, useNA = \"always\")\n#> \n#>   <20 20-49 50-64   65+  <NA> \n#>  3685  2500  1569  1500     0\n\n\n\nF.2.2.2 Sex\n\ndat2$sex <- dat2$RIAGENDR\ntable(dat2$sex, useNA = \"always\")\n#> \n#>   Male Female   <NA> \n#>   4557   4697      0\n\n\n\nF.2.2.3 Education\n\ndat2$education <- dat2$DMDEDUC2\ndat2$education <- as.factor(dat2$education)\ndat2$education <- car::recode(dat2$education, recodes = \" c('College graduate or above') = \n'College graduate or above'; c('Some college or AA degree', 'High school graduate/GED or equi') = \n'High school'; c('Less than 9th grade', '9-11th grade (Includes 12th grad') = \n'Less than high school'; else = NA \")\ndat2$education <- factor(dat2$education, \n                         levels = c(\"Less than high school\", \"High school\", \n                                    \"College graduate or above\"))\ntable(dat2$education, useNA = \"always\")\n#> \n#>     Less than high school               High school College graduate or above \n#>                      1117                      3103                      1336 \n#>                      <NA> \n#>                      3698\n\n\n\nF.2.2.4 Race/ethnicity\n\ndat2$race <- dat2$RIDRETH1\ndat2$race <- car::recode(dat2$race, recodes = \" 'Non-Hispanic White'='White';\n                    'Non-Hispanic Black'='Black'; c('Mexican American',\n                    'Other Hispanic')= 'Hispanic'; else='Others' \")\ndat2$race <- factor(dat2$race, levels = c(\"White\", \"Black\", \"Hispanic\", \"Others\"))\ntable(dat2$race, useNA = \"always\")\n#> \n#>    White    Black Hispanic   Others     <NA> \n#>     3150     2115     2187     1802        0\n\n\n\nF.2.2.5 Marital status\n\ndat2$marital <- dat2$DMDMARTL\ndat2$marital <- car::recode(dat2$marital, recodes = \" 'Never married'='Never married';\nc('Married', 'Living with partner') = 'Married/with partner'; \n                            c('Widowed', 'Divorced', 'Separated')='Other'; else=NA \")\ndat2$marital <- factor(dat2$marital, levels = c(\"Never married\", \"Married/with partner\",\n                                                \"Other\"))\ntable(dat2$marital, useNA = \"always\")\n#> \n#>        Never married Married/with partner                Other \n#>                 1006                 3252                 1305 \n#>                 <NA> \n#>                 3691\n\n\n\nF.2.2.6 Income\n\ndat2$income <- dat2$INDHHIN2\ndat2$income  <- car::recode(dat2$income, recodes = \" c('$ 0 to $ 4,999', '$ 5,000 to $ 9,999',\n'$10,000 to $14,999', '$15,000 to $19,999', 'Under $20,000')='less than $20,000';\n                       c('Over $20,000','$20,000 and Over', '$20,000 to $24,999', \n                       '$25,000 to $34,999', '$35,000 to $44,999', '$45,000 to $54,999', \n                       '$55,000 to $64,999', '$65,000 to $74,999')='$20,000 to $74,999';\n                       c('$75,000 to $99,999','$100,000 and Over')='$75,000 and Over'; \n                            else=NA \")\ndat2$income  <- factor(dat2$income , levels=c(\"less than $20,000\", \"$20,000 to $74,999\", \n                                              \"$75,000 and Over\"))\ntable(dat2$income, useNA = \"always\")\n#> \n#>  less than $20,000 $20,000 to $74,999   $75,000 and Over               <NA> \n#>               1589               4331               2453                881\n\n\n\nF.2.2.7 Where born / citizenship\n\ndat2$born <- dat2$DMDBORN4\ndat2$born <- car::recode(dat2$born, recodes = \" 'Others'='Other place';\n                       'Born in 50 US states or Washingt'= 'Born in US'; else=NA\")\ndat2$born <- factor(dat2$born, levels = c(\"Born in US\", \"Other place\"))\ntable(dat2$born, useNA = \"always\") \n#> \n#>  Born in US Other place        <NA> \n#>        7303        1948           3\n\n\n\nF.2.2.8 Pregnancy\n\ndat2$pregnancy <- dat2$RIDEXPRG\ndat2$pregnancy <- car::recode(dat2$pregnancy, \n                      recodes = \" 'Yes, positive lab pregnancy test' = 'Yes';\n                       'The participant was not pregnant' = 'No'; \n                       'Cannot ascertain if the particip' = 'inconclusive';\n                       else= 'outside of target population'  \")\ntable(dat2$pregnancy, useNA = \"always\") \n#> \n#>                 inconclusive                           No \n#>                           89                          966 \n#> outside of target population                          Yes \n#>                         8144                           55 \n#>                         <NA> \n#>                            0\n\n\n\n\nF.2.3 BMI\n\nF.2.3.1 BMI and Obesity\n\ndat2$bmi <- dat2$BMXBMI\nsummary(dat2$bmi)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>   12.30   20.40   25.80   26.58   31.30   86.20    1249\ndat2$obese <- ifelse(dat2$BMXBMI >= 30, \"Yes\", \"No\")\ndat2$obese <- factor(dat2$obese, levels = c(\"No\", \"Yes\"))\ntable(dat2$obese, useNA = \"always\")\n#> \n#>   No  Yes <NA> \n#> 5597 2408 1249\n\n\n\n\nF.2.4 Diabetes\n\ndat2$diabetes <- dat2$DIQ010\ndat2$diabetes <- car::recode(dat2$diabetes, \" 'Yes'='Yes'; c('No','Borderline')='No';\n                             else=NA \")\n\n# Taking insulin now or diabetic pills to lower blood sugar - they have diabetes\ndat2$diabetes[dat2$DIQ050 == \"Yes\"] <- \"Yes\"\ndat2$diabetes[dat2$DIQ070 == \"Yes\"] <- \"Yes\"\ntable(dat2$diabetes, useNA = \"always\")\n#> \n#>   No  Yes <NA> \n#> 7927  966  361\n\n\n\nF.2.5 Family history of diabetes\n\ntable(dat2$DIQ175A, useNA = \"always\")\n#> \n#> Family history     Don't know           <NA> \n#>           1143              2           8109\ndat2$diabetes.family.history <- dat2$DIQ175A\ndat2$diabetes.family.history <- car::recode(dat2$diabetes.family.history, \" 'Family history' = 'Yes'; \n                             else = 'No' \")\ndat2$diabetes.family.history <- factor(dat2$diabetes.family.history, levels = c(\"No\", \"Yes\"))\ndat2$diabetes.family.history[dat2$DIQ175A==\"Don't know\"] <- NA\ntable(dat2$diabetes.family.history, useNA = \"always\")\n#> \n#>   No  Yes <NA> \n#> 8109 1143    2\n\n\n\nF.2.6 Smoking\n\ndat2$smoking <- dat2$SMQ020\ndat2$smoking <- car::recode(dat2$smoking, \" 'Yes' = 'Current smoker'; 'No' = 'Never smoker'; else=NA  \")\ndat2$smoking <- factor(dat2$smoking, levels = c(\"Never smoker\", \"Previous smoker\", \"Current smoker\"))\ndat2$smoking[dat2$SMQ040 == \"Not at all\"] <- \"Previous smoker\"\ntable(dat2$smoking, useNA = \"always\")\n#> \n#>    Never smoker Previous smoker  Current smoker            <NA> \n#>            3497            1338            1021            3398\n\n\n\nF.2.7 Diet\n\nF.2.7.1 How healthy is the diet\n\ndat2$diet.healthy <- dat2$DBQ700\ndat2$diet.healthy <- car::recode(dat2$diet.healthy, recodes = \" c('Excellent', 'Very good')=\n                    'Very good or excellent'; 'Good'='Good'; c('Fair', 'Poor')=\n                    'Poor or fair'; else = NA \")\ndat2$diet.healthy <- factor(dat2$diet.healthy, levels = c(\"Poor or fair\", \"Good\", \n                                                          \"Very good or excellent\"))\ntable(dat2$diet.healthy, useNA = \"always\")\n#> \n#>           Poor or fair                   Good Very good or excellent \n#>                   2036                   2411                   1712 \n#>                   <NA> \n#>                   3095\n\n\n\n\nF.2.8 Vigorous physical activity\n\ndat2$physical.activity <- dat2$PAQ605\ndat2$physical.activity <- car::recode(dat2$physical.activity, recodes = \" 'No' = 'No'; \n                                      'Yes' = 'Yes'; else=NA\")\ndat2$physical.activity <- factor(dat2$physical.activity, levels = c(\"No\", \"Yes\"))\ntable(dat2$physical.activity, useNA = \"always\")\n#> \n#>   No  Yes <NA> \n#> 4461 1389 3404\n\n\n\nF.2.9 Access to medical services\n\ndat2$medical.access <- dat2$HUQ030\ndat2$medical.access <- car::recode(dat2$medical.access, recodes = \" c('Yes',\n                              'There is more than one place')='Yes'; 'There is no place'=\n                              'No'; else=NA\")\ntable(dat2$medical.access, useNA = \"always\")\n#> \n#>   No  Yes <NA> \n#> 1398 7854    2\n\n\n\nF.2.10 Hypertension/high blood pressure\n\nF.2.10.1 Systolic BP\n\ndat2$systolic1 <- dat2$BPXSY1\ndat2$systolic2 <- dat2$BPXSY2\ndat2$systolic3 <- dat2$BPXSY3\ndat2$systolic4 <- dat2$BPXSY4\n\ndat2 <- dat2 %>% \n  mutate(systolicBP = rowMeans(dat2[, c(\"systolic1\", \"systolic2\", \n                                        \"systolic3\", \"systolic4\")], \n                             na.rm = TRUE))\nsummary(dat2$systolicBP)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>   72.67  106.67  118.00  121.68  132.67  238.00    2537\n\n\n\nF.2.10.2 Diastolic BP\n\ndat2$diastolic1 <- dat2$BPXDI1\ndat2$diastolic2 <- dat2$BPXDI2\ndat2$diastolic3 <- dat2$BPXDI3\ndat2$diastolic4 <- dat2$BPXDI4\ndatX <- dat2[, c(\"diastolic1\", \"diastolic2\", \n                 \"diastolic3\", \"diastolic4\")]\ndatX[datX ==0] <- NA\ndat2$diastolicBP <- rowMeans(datX[, c(\"diastolic1\", \"diastolic2\", \n                                      \"diastolic3\", \"diastolic4\")], \n                             na.rm = TRUE)\nsummary(dat2$diastolicBP)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>    8.00   61.33   70.00   69.54   77.33  135.33    2618\n\n\n\n\nF.2.11 Sleep (daily in hours)\n\ndat2$sleep <- dat2$SLD012\nsummary(dat2$sleep)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>   2.000   7.000   8.000   7.659   8.500  14.000    3141\n\n\n\nF.2.12 Laboratory data\n\nF.2.12.1 Uric acid (mg/dL)\n\ndat2$uric.acid <- dat2$LBXSUA\nsummary(dat2$uric.acid)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>   0.800   4.300   5.300   5.402   6.300  15.100    3353\n\n\n\nF.2.12.2 Total protein (g/dL)\n\ndat2$protein.total <- dat2$LBXSTP\nsummary(dat2$protein.total)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>   5.300   6.900   7.200   7.166   7.400  10.000    3353\n\n\n\nF.2.12.3 Total bilirubin (mg/dL)\n\ndat2$bilirubin.total <- dat2$LBXSTB\nsummary(dat2$bilirubin.total)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>    0.10    0.30    0.40    0.46    0.60    3.70    3351\n\n\n\nF.2.12.4 Phosphorus (mg/dL)\n\ndat2$phosphorus <- dat2$LBXSPH\nsummary(dat2$phosphorus)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>   1.900   3.300   3.600   3.665   4.000   9.600    3353\n\n\n\nF.2.12.5 Sodium (mmol/L)\n\ndat2$sodium <- dat2$LBXSNASI\nsummary(dat2$sodium)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>   121.0   138.0   140.0   140.3   142.0   151.0    3350\n\n\n\nF.2.12.6 Potassium (mmol/L)\n\ndat2$potassium <- dat2$LBXSKSI\nsummary(dat2$potassium)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>   2.800   3.900   4.100   4.094   4.300   6.600    3355\n\n\n\nF.2.12.7 Globulin (g/dL)\n\ndat2$globulin <- dat2$LBXSGB\nsummary(dat2$globulin)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>   1.800   2.800   3.100   3.087   3.300   6.000    3353\n\n\n\nF.2.12.8 Total calcium (mg/dL)\n\ndat2$calcium.total <- dat2$LBXSCA\nsummary(dat2$calcium.total)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>    6.40    9.10    9.30    9.32    9.60   11.70    3353\n\n\n\nF.2.12.9 High cholesterol\n\ndat2$high.cholesterol <- dat2$BPQ080\ndat2$high.cholesterol <- car::recode(dat2$high.cholesterol, recodes = \" 'Yes'='Yes';\n                                     'No'='No'; else = NA\")\ntable(dat2$high.cholesterol, useNA = \"always\")\n#> \n#>   No  Yes <NA> \n#> 4153 1968 3133\n\n\n\n\nF.2.13 Survey features\n\nF.2.13.1 Weight\n\ndat2$survey.weight <- dat2$WTINT2YR\nsummary(dat2$survey.weight)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n#>    2571   13074   21099   34671   36923  433085\ndat2$survey.weight.mec <- dat2$WTMEC2YR\nsummary(dat2$survey.weight.mec)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n#>       0   12347   21060   34671   37562  419763\n\n\n\nF.2.13.2 PSU\n\ndat2$psu <- as.factor(dat2$SDMVPSU)\ntable(dat2$psu)\n#> \n#>    1    2 \n#> 4464 4790\n\n\n\nF.2.13.3 Strata\n\ndat2$strata <- as.factor(dat2$SDMVSTRA)\ntable(dat2$strata)\n#> \n#> 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 \n#> 510 638 695 554 605 653 612 693 735 551 689 609 604 596 510\n\n\n\n\nF.2.14 Survey year\n\ndat2$year <- dat2$SDDSRVYR\ntable(dat2$year, useNA = \"always\") \n#> \n#>   10 <NA> \n#> 9254    0\n\n\n\nF.2.15 ICD-10-CM codes\n\ncolnames(rxq12) <- c(\"id\", \"icd10\")\ncolnames(rxq22) <- c(\"id\", \"icd10\")\ncolnames(rxq32) <- c(\"id\", \"icd10\")\n\nrx2017 <- rbind(rxq12, rxq22, rxq32)\nrx2017 <- rx2017[order(rx2017$id),]\n\nrx2017$icd10[rx2017$icd10 == \"Unknown\"] <- NA\nrx2017$icd10[rx2017$icd10 == \"Refused\"] <- NA\nrx2017$icd10[rx2017$icd10 == \"Don't know\"] <- NA\nrx2017$icd10[rx2017$icd10 == \"\"] <- NA\nrx2017$icd10.new <- substr(rx2017$icd10, start = 1, stop = 3)\n\nrx2017 <- na.omit(rx2017)"
  },
  {
    "objectID": "analytic17.html#analytic-data",
    "href": "analytic17.html#analytic-data",
    "title": "Appendix F — Creating analytic dataset from 2017-18 cycle",
    "section": "F.3 Analytic data",
    "text": "F.3 Analytic data\n\nF.3.1 Full dataset\n\nnhanes17r <- dat2\n\n\n\nF.3.2 Analytic datset - adults 20 years of more\n\nvars <- c(\n  # ID\n  \"id\",\n  \n  # Demographic\n  \"age\", \"age.cat\", \"sex\", \"education\", \"race\", \n  \"marital\", \"income\", \"born\", \"pregnancy\",\n  \n  # obesity\n  \"obese\", \n  \n  # Diabetes\n  \"diabetes\", \"diabetes.family.history\",\n  \n  # Smoking\n  \"smoking\", \n  \n  # Diet\n  \"diet.healthy\", \n\n  # Physical activity\n  \"physical.activity\", \n  \n  # Access to routine healthcare\n  \"medical.access\",\n  \n  # Blood pressure and Hypertension\n  \"systolicBP\", \"diastolicBP\", \n  \n  # Sleep \n  \"sleep\",\n\n  # Laboratory \n  \"uric.acid\", \"protein.total\", \"bilirubin.total\", \"phosphorus\",\n  \"sodium\", \"potassium\", \"globulin\", \"calcium.total\", \n  \"high.cholesterol\",\n  \n  # Survey features\n  \"survey.weight\", \"survey.weight.mec\", \"psu\", \"strata\", \n  \n  # Survey year\n  \"year\"\n)\n\nnhanes17r.sel <- nhanes17r[, vars]\n\n\n# Adults 20 years of more and not pregnant\ndim(nhanes17r.sel)\n#> [1] 9254   34\nanalytic17 <- subset(nhanes17r.sel, age >= 20 & \n                       pregnancy != 'yes')\ndim(analytic17)\n#> [1] 5569   34\n\n\n\nF.3.3 Save dataset for later use\n\ndim(analytic17)\n#> [1] 5569   34\ndim(rx2017)\n#> [1] 15025     3\nsave(analytic17, rx2017, file = \"data/analytic17recoded.RData\")"
  },
  {
    "objectID": "merge13to17.html#analytic-dataset",
    "href": "merge13to17.html#analytic-dataset",
    "title": "Appendix G — Merge NHANES 2013-2018 datasets",
    "section": "G.1 Analytic dataset",
    "text": "G.1 Analytic dataset\n\nG.1.1 Load 2013-18 datasets\n\nload(\"data/analytic13recoded.RData\")\nload(\"data/analytic15recoded.RData\")\nload(\"data/analytic17recoded.RData\")\n\n\n\nG.1.2 Merge 2013-18 datasets\n\n# adults aged 20 years or more\ndata.merged0 <- rbind(analytic13, analytic15, analytic17)\ndim(data.merged0)\n#> [1] 17057    34\ndata.merged <- droplevels(data.merged0)\n\n\n\nG.1.3 Check missingness\n\nplot_missing(data.merged)\n\n\n\n# profile_missing(data.merged)\ndim(data.merged)\n#> [1] 17057    34\ndata.complete <- na.omit(data.merged)\ndim(data.complete)\n#> [1] 13505    34\ndata.merged.x <- data.merged[!is.na(data.merged[\"obese\"]),]\ndim(data.merged.x)\n#> [1] 16101    34\ndata.merged.xy <- data.merged.x[!is.na(data.merged.x[\"diabetes\"]),]\ndim(data.merged.xy)\n#> [1] 16091    34\nplot_missing(data.merged.xy)\n\n\n\nimp1 <- mice(data.merged.xy, m = 1, maxit = 10, method = \"pmm\")\n#> \n#>  iter imp variable\n#>   1   1  education  marital  income  born  diabetes.family.history  smoking  diet.healthy  physical.activity  medical.access  systolicBP  diastolicBP  sleep  uric.acid  protein.total  bilirubin.total  phosphorus  sodium  potassium  globulin  calcium.total  high.cholesterol\n#>   2   1  education  marital  income  born  diabetes.family.history  smoking  diet.healthy  physical.activity  medical.access  systolicBP  diastolicBP  sleep  uric.acid  protein.total  bilirubin.total  phosphorus  sodium  potassium  globulin  calcium.total  high.cholesterol\n#>   3   1  education  marital  income  born  diabetes.family.history  smoking  diet.healthy  physical.activity  medical.access  systolicBP  diastolicBP  sleep  uric.acid  protein.total  bilirubin.total  phosphorus  sodium  potassium  globulin  calcium.total  high.cholesterol\n#>   4   1  education  marital  income  born  diabetes.family.history  smoking  diet.healthy  physical.activity  medical.access  systolicBP  diastolicBP  sleep  uric.acid  protein.total  bilirubin.total  phosphorus  sodium  potassium  globulin  calcium.total  high.cholesterol\n#>   5   1  education  marital  income  born  diabetes.family.history  smoking  diet.healthy  physical.activity  medical.access  systolicBP  diastolicBP  sleep  uric.acid  protein.total  bilirubin.total  phosphorus  sodium  potassium  globulin  calcium.total  high.cholesterol\n#>   6   1  education  marital  income  born  diabetes.family.history  smoking  diet.healthy  physical.activity  medical.access  systolicBP  diastolicBP  sleep  uric.acid  protein.total  bilirubin.total  phosphorus  sodium  potassium  globulin  calcium.total  high.cholesterol\n#>   7   1  education  marital  income  born  diabetes.family.history  smoking  diet.healthy  physical.activity  medical.access  systolicBP  diastolicBP  sleep  uric.acid  protein.total  bilirubin.total  phosphorus  sodium  potassium  globulin  calcium.total  high.cholesterol\n#>   8   1  education  marital  income  born  diabetes.family.history  smoking  diet.healthy  physical.activity  medical.access  systolicBP  diastolicBP  sleep  uric.acid  protein.total  bilirubin.total  phosphorus  sodium  potassium  globulin  calcium.total  high.cholesterol\n#>   9   1  education  marital  income  born  diabetes.family.history  smoking  diet.healthy  physical.activity  medical.access  systolicBP  diastolicBP  sleep  uric.acid  protein.total  bilirubin.total  phosphorus  sodium  potassium  globulin  calcium.total  high.cholesterol\n#>   10   1  education  marital  income  born  diabetes.family.history  smoking  diet.healthy  physical.activity  medical.access  systolicBP  diastolicBP  sleep  uric.acid  protein.total  bilirubin.total  phosphorus  sodium  potassium  globulin  calcium.total  high.cholesterol\n#> Warning: Number of logged events: 210\ndensityplot(imp1)\n\n\n\ndata.imputed <- complete(imp1, action = 1)\ndim(data.imputed)\n#> [1] 16091    34\n\n\n\nG.1.4 Summary statistics\n\nround(prop.table(table(data.complete$obese))*100, 2)\n#> \n#>    No   Yes \n#> 59.88 40.12\n\nvars <- c(\n  # Demographic\n  \"age\", \"age.cat\", \"sex\", \"education\", \"race\", \n  \"marital\", \"income\", \"born\", \n  \n  # Diabetes history\n  \"diabetes.family.history\",\n  \n  # Smoking\n  \"smoking\", \n  \n  # Diet\n  \"diet.healthy\", \n\n  # Physical activity\n  \"physical.activity\", \n  \n  # Access to routine healthcare\n  \"medical.access\",\n  \n  # Blood pressure and Hypertension\n  \"systolicBP\", \"diastolicBP\", \n  \n  # Sleep \n  \"sleep\",\n\n  # Laboratory \n  \"uric.acid\", \"protein.total\", \"bilirubin.total\", \"phosphorus\",\n  \"sodium\", \"potassium\", \"globulin\", \"calcium.total\", \n  \"high.cholesterol\",\n  \n  # Survey year\n  \"year\"\n)\ntab1 <- CreateTableOne(vars = vars, \n                       strata = \"obese\", \n                       data = data.complete, \n                       test = FALSE, \n                       addOverall = TRUE)\nprint(tab1, \n      showAllLevels = TRUE, \n      smd = TRUE)\n#>                              Stratified by obese\n#>                               level                     Overall       \n#>   n                                                      13505        \n#>   age (mean (SD))                                        49.69 (17.51)\n#>   age.cat (%)                 20-49                       6725 (49.8) \n#>                               50-64                       3606 (26.7) \n#>                               65+                         3174 (23.5) \n#>   sex (%)                     Male                        6477 (48.0) \n#>                               Female                      7028 (52.0) \n#>   education (%)               Less than high school       2741 (20.3) \n#>                               High school                 7348 (54.4) \n#>                               College graduate or above   3416 (25.3) \n#>   race (%)                    White                       5245 (38.8) \n#>                               Black                       2758 (20.4) \n#>                               Hispanic                    3320 (24.6) \n#>                               Others                      2182 (16.2) \n#>   marital (%)                 Never married               2435 (18.0) \n#>                               Married/with partner        8151 (60.4) \n#>                               Other                       2919 (21.6) \n#>   income (%)                  less than $20,000           2615 (19.4) \n#>                               $20,000 to $74,999          7024 (52.0) \n#>                               $75,000 and Over            3866 (28.6) \n#>   born (%)                    Born in US                  9440 (69.9) \n#>                               Other place                 4065 (30.1) \n#>   diabetes.family.history (%) No                         10826 (80.2) \n#>                               Yes                         2679 (19.8) \n#>   smoking (%)                 Never smoker                7728 (57.2) \n#>                               Previous smoker             3230 (23.9) \n#>                               Current smoker              2547 (18.9) \n#>   diet.healthy (%)            Poor or fair                4242 (31.4) \n#>                               Good                        5499 (40.7) \n#>                               Very good or excellent      3764 (27.9) \n#>   physical.activity (%)       No                         10612 (78.6) \n#>                               Yes                         2893 (21.4) \n#>   medical.access (%)          No                          2308 (17.1) \n#>                               Yes                        11197 (82.9) \n#>   systolicBP (mean (SD))                                124.82 (18.36)\n#>   diastolicBP (mean (SD))                                70.89 (11.58)\n#>   sleep (mean (SD))                                       7.37 (1.56) \n#>   uric.acid (mean (SD))                                   5.43 (1.45) \n#>   protein.total (mean (SD))                               7.13 (0.46) \n#>   bilirubin.total (mean (SD))                             0.55 (0.30) \n#>   phosphorus (mean (SD))                                  3.69 (0.57) \n#>   sodium (mean (SD))                                    139.53 (2.49) \n#>   potassium (mean (SD))                                   4.01 (0.36) \n#>   globulin (mean (SD))                                    2.92 (0.46) \n#>   calcium.total (mean (SD))                               9.36 (0.37) \n#>   high.cholesterol (%)        No                          8707 (64.5) \n#>                               Yes                         4798 (35.5) \n#>   year (mean (SD))                                        8.95 (0.81) \n#>                              Stratified by obese\n#>                               No             Yes            SMD   \n#>   n                             8087           5418               \n#>   age (mean (SD))              49.48 (18.15)  50.00 (16.52)  0.030\n#>   age.cat (%)                   4076 (50.4)    2649 (48.9)   0.080\n#>                                 2048 (25.3)    1558 (28.8)        \n#>                                 1963 (24.3)    1211 (22.4)        \n#>   sex (%)                       4125 (51.0)    2352 (43.4)   0.153\n#>                                 3962 (49.0)    3066 (56.6)        \n#>   education (%)                 1609 (19.9)    1132 (20.9)   0.237\n#>                                 4111 (50.8)    3237 (59.7)        \n#>                                 2367 (29.3)    1049 (19.4)        \n#>   race (%)                      3159 (39.1)    2086 (38.5)   0.400\n#>                                 1420 (17.6)    1338 (24.7)        \n#>                                 1780 (22.0)    1540 (28.4)        \n#>                                 1728 (21.4)     454 ( 8.4)        \n#>   marital (%)                   1519 (18.8)     916 (16.9)   0.083\n#>                                 4924 (60.9)    3227 (59.6)        \n#>                                 1644 (20.3)    1275 (23.5)        \n#>   income (%)                    1524 (18.8)    1091 (20.1)   0.131\n#>                                 4058 (50.2)    2966 (54.7)        \n#>                                 2505 (31.0)    1361 (25.1)        \n#>   born (%)                      5247 (64.9)    4193 (77.4)   0.279\n#>                                 2840 (35.1)    1225 (22.6)        \n#>   diabetes.family.history (%)   6739 (83.3)    4087 (75.4)   0.196\n#>                                 1348 (16.7)    1331 (24.6)        \n#>   smoking (%)                   4654 (57.5)    3074 (56.7)   0.119\n#>                                 1795 (22.2)    1435 (26.5)        \n#>                                 1638 (20.3)     909 (16.8)        \n#>   diet.healthy (%)              1981 (24.5)    2261 (41.7)   0.438\n#>                                 3346 (41.4)    2153 (39.7)        \n#>                                 2760 (34.1)    1004 (18.5)        \n#>   physical.activity (%)         6445 (79.7)    4167 (76.9)   0.068\n#>                                 1642 (20.3)    1251 (23.1)        \n#>   medical.access (%)            1546 (19.1)     762 (14.1)   0.136\n#>                                 6541 (80.9)    4656 (85.9)        \n#>   systolicBP (mean (SD))      123.20 (18.84) 127.22 (17.33)  0.222\n#>   diastolicBP (mean (SD))      69.99 (11.32)  72.23 (11.84)  0.193\n#>   sleep (mean (SD))             7.41 (1.53)    7.32 (1.61)   0.056\n#>   uric.acid (mean (SD))         5.20 (1.37)    5.77 (1.49)   0.397\n#>   protein.total (mean (SD))     7.14 (0.47)    7.11 (0.45)   0.055\n#>   bilirubin.total (mean (SD))   0.58 (0.30)    0.51 (0.29)   0.239\n#>   phosphorus (mean (SD))        3.72 (0.56)    3.65 (0.58)   0.114\n#>   sodium (mean (SD))          139.58 (2.47)  139.44 (2.52)   0.055\n#>   potassium (mean (SD))         4.00 (0.36)    4.02 (0.36)   0.045\n#>   globulin (mean (SD))          2.87 (0.45)    3.00 (0.45)   0.306\n#>   calcium.total (mean (SD))     9.39 (0.37)    9.32 (0.37)   0.177\n#>   high.cholesterol (%)          5436 (67.2)    3271 (60.4)   0.143\n#>                                 2651 (32.8)    2147 (39.6)        \n#>   year (mean (SD))              8.93 (0.81)    8.99 (0.81)   0.083"
  },
  {
    "objectID": "merge13to17.html#proxy-data-from-icd10-codes",
    "href": "merge13to17.html#proxy-data-from-icd10-codes",
    "title": "Appendix G — Merge NHANES 2013-2018 datasets",
    "section": "G.2 Proxy data from ICD10 codes",
    "text": "G.2 Proxy data from ICD10 codes\n\ndat.proxy.long <- rbind(rx2013, rx2015, rx2017) \ndat.proxy.long$icd10 <- NULL\n\n# Rename 3 digits ICD-10 codes as icd10\ncolnames(dat.proxy.long)[names(dat.proxy.long)==\"icd10.new\"] <- \"icd10\"\n\n# Delete codes associated with exposure and outcome\ndat.proxy.long <- subset(dat.proxy.long, icd10 != \"E66\") # Overweight and obesity\ndat.proxy.long <- subset(dat.proxy.long, icd10 != \"O24\") # Gestational diabetes mellitus\ndat.proxy.long <- subset(dat.proxy.long, icd10 != \"E10\") # Type 1 diabetes mellitus\ndat.proxy.long <- subset(dat.proxy.long, icd10 != \"E11\") # Type 2 diabetes mellitus"
  },
  {
    "objectID": "merge13to17.html#mortality-data",
    "href": "merge13to17.html#mortality-data",
    "title": "Appendix G — Merge NHANES 2013-2018 datasets",
    "section": "G.3 Mortality data",
    "text": "G.3 Mortality data\nMortality data obtained from 2019 Public-Use Linked Mortality Files\n\nG.3.1 Mortality data 2013-14\n\nmort2013 <- read_fwf(file = \"data/Mortalitydata/NHANES_2013_2014_MORT_2019_PUBLIC.dat\",\n                     col_types = \"iiiiiiii\",\n                     fwf_cols(id = c(1,6),\n                              mort_eligstat = c(15,15),\n                              mort_stat = c(16,16),\n                              mort_ucod_leading = c(17,19),\n                              mort_diabetes = c(20,20),\n                              mort_hyperten = c(21,21),\n                              mort_permth_int = c(43,45),\n                              mort_permth_exm = c(46,48)),\n                     na = c(\"\", \".\"))\n\n\n\nG.3.2 Mortality data 2015-16\n\nmort2015 <- read_fwf(file = \"data/Mortalitydata/NHANES_2015_2016_MORT_2019_PUBLIC.dat\",\n                     col_types = \"iiiiiiii\",\n                     fwf_cols(id = c(1,6),\n                              mort_eligstat = c(15,15),\n                              mort_stat = c(16,16),\n                              mort_ucod_leading = c(17,19),\n                              mort_diabetes = c(20,20),\n                              mort_hyperten = c(21,21),\n                              mort_permth_int = c(43,45),\n                              mort_permth_exm = c(46,48)),\n                     na = c(\"\", \".\"))\n\n\n\nG.3.3 Mortality data 2017-18\n\nmort2017 <- read_fwf(file = \"data/Mortalitydata/NHANES_2017_2018_MORT_2019_PUBLIC.dat\",\n                     col_types = \"iiiiiiii\",\n                     fwf_cols(id = c(1,6),\n                              mort_eligstat = c(15,15),\n                              mort_stat = c(16,16),\n                              mort_ucod_leading = c(17,19),\n                              mort_diabetes = c(20,20),\n                              mort_hyperten = c(21,21),\n                              mort_permth_int = c(43,45),\n                              mort_permth_exm = c(46,48)),\n                     na = c(\"\", \".\"))\n\n\n\nG.3.4 Merging mortality datasets\n\ndat.mortality <- rbind(mort2013, mort2015, mort2017)\ntable(dat.mortality$mort_eligstat, useNA = \"always\")\n#> \n#>     1     2     3  <NA> \n#> 17883 11439    78     0\n#1 = \"Eligible\"\n#2 = \"Under age 18, not available for public release\"\n#3 = \"Ineligible\""
  },
  {
    "objectID": "merge13to17.html#save-dataset-for-later-use",
    "href": "merge13to17.html#save-dataset-for-later-use",
    "title": "Appendix G — Merge NHANES 2013-2018 datasets",
    "section": "G.4 Save dataset for later use",
    "text": "G.4 Save dataset for later use\n\nsave(data.merged, \n     data.merged.xy, \n     data.imputed,\n     data.complete, \n     dat.proxy.long, \n     dat.mortality, \n     file = \"data/analytic3cycles.RData\")"
  },
  {
    "objectID": "hdPSinMerged.html#determine-data-sources",
    "href": "hdPSinMerged.html#determine-data-sources",
    "title": "Appendix H — Creating hdPS variables from NHANES",
    "section": "H.1 Determine data sources",
    "text": "H.1 Determine data sources\n\nH.1.1 Analytic data\nEven though the original algorithm was proposed for health care utilization or claims databases, in the current example, we will be relying on openly available NHANES data.\n\nload(file = \"data/analytic3cycles.RData\")\nls()\n#> [1] \"dat.mortality\"  \"dat.proxy.long\" \"data.complete\"  \"data.imputed\"  \n#> [5] \"data.merged\"    \"data.merged.xy\"\n\n\n\nH.1.2 Proxy data\nThe Prescription Medications component of NHANES provides personal interview data on use of prescription medications during a one-month period prior (past 30 days) to the participant’s interview date.\n\nanalytic <- data.imputed\nrm(data.complete, data.imputed, data.merged, data.merged.xy)\nproxy.var.long <- dat.proxy.long\nrm(dat.proxy.long)\n\n\n\nH.1.3 Merge analytic data and proxies\n\nPrepare the minimal analytic data only with the following 4 information:\n\n\nidentifying information (idx)\nexposure (obese)\noutcome (diabetes)\ndomain of the codes (dx)\n\nIn this example we only have prescription domain (1 domain dx)\n\nidx <- analytic$id\noutcome <- as.numeric(analytic$diabetes == \"Yes\") \nexposure <- as.numeric(analytic$obese == \"Yes\")\ndomain <- \"dx\"\nanalytic.dfx <- as.data.frame(cbind(idx, exposure, outcome, domain))\nhead(analytic.dfx)\n\n\n\n  \n\n\ndim(analytic.dfx)\n#> [1] 16091     4\n\n\nIn the proxy data (from prescription domain), make sure the IDs have same name (idx) as the minimal analytic data:\n\n\nproxy.var.long$idx <- proxy.var.long$id\nsort(table(proxy.var.long$icd10), decreasing = TRUE)[1:10]\n#> \n#>  I10  E78  J45  F32  F41  K21  M79  M54  E03  G47 \n#> 7302 3674 1495 1483 1439 1233 1156 1050 1017  964\nhead(proxy.var.long)\n\n\n\n  \n\n\nproxy.var.long$id <- NULL\n\n\nMerge both datasets\n\n\ndfx <- merge(analytic.dfx, proxy.var.long, by = \"idx\")\nhead(dfx)\n\n\n\n  \n\n\ntail(dfx)\n\n\n\n  \n\n\ndim(dfx)\n#> [1] 33885     5"
  },
  {
    "objectID": "hdPSinMerged.html#identifying-candidate-empirical-covariates",
    "href": "hdPSinMerged.html#identifying-candidate-empirical-covariates",
    "title": "Appendix H — Creating hdPS variables from NHANES",
    "section": "H.2 Identifying candidate empirical covariates",
    "text": "H.2 Identifying candidate empirical covariates\n\nNow, based on the merged dataset, we want to identify which patients were linked in both databases\n\n\n#select distinct elements that are unique for each patient - treatment and outcome\nbasetable <- dfx %>% select(idx, exposure, outcome) %>% distinct()\nhead(basetable)\n\n\n\n  \n\n\ndim(basetable)\n#> [1] 8944    3\npatientIds <- basetable$idx\n\n\nUsing the above IDs, we want to identify the list of candidate empirical covariates. This list is constrained by\n\n\ntheir prevalence (only top n covariates with highest prevalence would be chosen). We choose n = 200 as it was proposed in the original algorithm. In reality, this is not necessary to be so restrictive.\nMore importantly, analysts absolutely need to get rid of the codes that have zero variance (e.g., everyone has the code, or nobody has it). This second part of the problem is more likely and addressed by the following restriction: At least min_num_patients number of patients need to have that code to be selected in the list.\n\nIf there were more dimensions, separate list of candidate empirical covariates would be identified.\nOne important point here is that we have chosen granularity to be 3 digits in the ICD-10 code (we have already truncated the codes at 3 digit level while preparing the data).\n\nstep1 <- get_candidate_covariates(df = dfx,  \n                                  domainVarname = \"domain\",\n                                  eventCodeVarname = \"icd10\", \n                                  patientIdVarname = \"idx\",\n                                  patientIdVector = patientIds,\n                                  n = 200, \n                                  min_num_patients = 20)\n#> Joining with `by = join_by(eventCodeVarname, domainVarname)`\nout1 <- step1$covars_data \nhead(out1)\n\n\n\n  \n\n\ntail(out1)\n\n\n\n  \n\n\nall.equal(patientIds, step1$patientIds) #should return  TRUE\n#> [1] TRUE"
  },
  {
    "objectID": "hdPSinMerged.html#assessing-recurrence-via-3-binary-variables",
    "href": "hdPSinMerged.html#assessing-recurrence-via-3-binary-variables",
    "title": "Appendix H — Creating hdPS variables from NHANES",
    "section": "H.3 Assessing recurrence via 3 binary variables",
    "text": "H.3 Assessing recurrence via 3 binary variables\nIn this step, we generate 3 binary recurrence covariates for each of the candidate empirical covariates identified in the previous step:\n\noccurred at least once\noccurred sporadically (at least more than the median)\noccurred frequently (at least more than the 75th percentile)\n\n\nstep2 <- get_recurrence_covariates(df = out1, \n                                   patientIdVarname = \"idx\",\n                                   eventCodeVarname = \"icd10\", \n                                   patientIdVector = patientIds)\nout2 <- step2$recurrence_data\nhead(out2[,1:3])\n\n\n\n  \n\n\nnames(step2$recurrence_data)[-1]\n#>   [1] \"rec_dx_A49_once\"     \"rec_dx_A60_once\"     \"rec_dx_B00_once\"    \n#>   [4] \"rec_dx_B02_once\"     \"rec_dx_B20_once\"     \"rec_dx_B20_frequent\"\n#>   [7] \"rec_dx_B35_once\"     \"rec_dx_B37_once\"     \"rec_dx_B96_once\"    \n#>  [10] \"rec_dx_C50_once\"     \"rec_dx_C80_once\"     \"rec_dx_D75_once\"    \n#>  [13] \"rec_dx_E03_once\"     \"rec_dx_E04_once\"     \"rec_dx_E05_once\"    \n#>  [16] \"rec_dx_E07_once\"     \"rec_dx_E28_once\"     \"rec_dx_E29_once\"    \n#>  [19] \"rec_dx_E78_once\"     \"rec_dx_E79_once\"     \"rec_dx_E87_once\"    \n#>  [22] \"rec_dx_F17_once\"     \"rec_dx_F20_once\"     \"rec_dx_F20_frequent\"\n#>  [25] \"rec_dx_F29_once\"     \"rec_dx_F31_once\"     \"rec_dx_F31_frequent\"\n#>  [28] \"rec_dx_F32_once\"     \"rec_dx_F39_once\"     \"rec_dx_F41_once\"    \n#>  [31] \"rec_dx_F43_once\"     \"rec_dx_F90_once\"     \"rec_dx_G20_once\"    \n#>  [34] \"rec_dx_G20_frequent\" \"rec_dx_G25_once\"     \"rec_dx_G30_once\"    \n#>  [37] \"rec_dx_G30_frequent\" \"rec_dx_G31_once\"     \"rec_dx_G40_once\"    \n#>  [40] \"rec_dx_G43_once\"     \"rec_dx_G47_once\"     \"rec_dx_G89_once\"    \n#>  [43] \"rec_dx_H04_once\"     \"rec_dx_H10_once\"     \"rec_dx_H40_once\"    \n#>  [46] \"rec_dx_H40_frequent\" \"rec_dx_H57_once\"     \"rec_dx_H57_frequent\"\n#>  [49] \"rec_dx_H66_once\"     \"rec_dx_I10_once\"     \"rec_dx_I10_frequent\"\n#>  [52] \"rec_dx_I20_once\"     \"rec_dx_I21_once\"     \"rec_dx_I48_once\"    \n#>  [55] \"rec_dx_I48_frequent\" \"rec_dx_I49_once\"     \"rec_dx_I50_once\"    \n#>  [58] \"rec_dx_I50_frequent\" \"rec_dx_I51_once\"     \"rec_dx_I63_once\"    \n#>  [61] \"rec_dx_I70_once\"     \"rec_dx_I80_once\"     \"rec_dx_I99_once\"    \n#>  [64] \"rec_dx_J01_once\"     \"rec_dx_J02_once\"     \"rec_dx_J18_once\"    \n#>  [67] \"rec_dx_J20_once\"     \"rec_dx_J30_once\"     \"rec_dx_J40_once\"    \n#>  [70] \"rec_dx_J42_once\"     \"rec_dx_J43_once\"     \"rec_dx_J43_frequent\"\n#>  [73] \"rec_dx_J44_once\"     \"rec_dx_J44_sporadic\" \"rec_dx_J45_once\"    \n#>  [76] \"rec_dx_J45_frequent\" \"rec_dx_J98_once\"     \"rec_dx_K04_once\"    \n#>  [79] \"rec_dx_K08_once\"     \"rec_dx_K21_once\"     \"rec_dx_K25_once\"    \n#>  [82] \"rec_dx_K27_once\"     \"rec_dx_K30_once\"     \"rec_dx_K31_once\"    \n#>  [85] \"rec_dx_K51_once\"     \"rec_dx_K51_frequent\" \"rec_dx_K58_once\"    \n#>  [88] \"rec_dx_K59_once\"     \"rec_dx_K76_once\"     \"rec_dx_K92_once\"    \n#>  [91] \"rec_dx_L08_once\"     \"rec_dx_L20_once\"     \"rec_dx_L23_once\"    \n#>  [94] \"rec_dx_L29_once\"     \"rec_dx_L40_once\"     \"rec_dx_L70_once\"    \n#>  [97] \"rec_dx_L71_once\"     \"rec_dx_L93_once\"     \"rec_dx_L93_frequent\"\n#> [100] \"rec_dx_M06_once\"     \"rec_dx_M10_once\"     \"rec_dx_M13_once\"    \n#> [103] \"rec_dx_M19_once\"     \"rec_dx_M1A_once\"     \"rec_dx_M25_once\"    \n#> [106] \"rec_dx_M54_once\"     \"rec_dx_M54_frequent\" \"rec_dx_M62_once\"    \n#> [109] \"rec_dx_M79_once\"     \"rec_dx_M81_once\"     \"rec_dx_M85_once\"    \n#> [112] \"rec_dx_N19_once\"     \"rec_dx_N20_once\"     \"rec_dx_N28_once\"    \n#> [115] \"rec_dx_N30_once\"     \"rec_dx_N32_once\"     \"rec_dx_N39_once\"    \n#> [118] \"rec_dx_N40_once\"     \"rec_dx_N42_once\"     \"rec_dx_N52_once\"    \n#> [121] \"rec_dx_N92_once\"     \"rec_dx_N94_once\"     \"rec_dx_N95_once\"    \n#> [124] \"rec_dx_R00_once\"     \"rec_dx_R05_once\"     \"rec_dx_R06_once\"    \n#> [127] \"rec_dx_R07_once\"     \"rec_dx_R09_once\"     \"rec_dx_R10_once\"    \n#> [130] \"rec_dx_R11_once\"     \"rec_dx_R12_once\"     \"rec_dx_R19_once\"    \n#> [133] \"rec_dx_R21_once\"     \"rec_dx_R25_once\"     \"rec_dx_R32_once\"    \n#> [136] \"rec_dx_R35_once\"     \"rec_dx_R39_once\"     \"rec_dx_R41_once\"    \n#> [139] \"rec_dx_R42_once\"     \"rec_dx_R45_once\"     \"rec_dx_R51_once\"    \n#> [142] \"rec_dx_R52_once\"     \"rec_dx_R60_once\"     \"rec_dx_R73_once\"    \n#> [145] \"rec_dx_T14_once\"     \"rec_dx_T78_once\"     \"rec_dx_T86_once\"    \n#> [148] \"rec_dx_T86_sporadic\" \"rec_dx_T86_frequent\" \"rec_dx_T88_once\"    \n#> [151] \"rec_dx_Z79_once\"     \"rec_dx_Z95_once\"\nlength(step2$recurrence_data)\n#> [1] 153\ndim(out2)\n#> [1] 8944  153"
  },
  {
    "objectID": "hdPSinMerged.html#prioritising-covariates",
    "href": "hdPSinMerged.html#prioritising-covariates",
    "title": "Appendix H — Creating hdPS variables from NHANES",
    "section": "H.4 Prioritising covariates",
    "text": "H.4 Prioritising covariates\n\nH.4.1 Bross formula\n\nThree components are used in the calculation of bias contributed by not adjusting for a covariate:\n\n\nprevalence of a binary recurrence variable among exposed (\\(P_{RE}\\))\nprevalence of that binary recurrence variable among unexposed (\\(P_{RU}\\))\nassociation between that binary recurrence variable and the outcome (\\(RR_{RO}\\))\n\nThese are the ingredients of the Bross formula. This formula is helpful for understanding the impact of unmeasured confounding of a binary variable. We have to put assumed prevalence and risk ratio associated with an unmeasured confounder.\n\nThese components help us calculate \\(log-absolute-bias\\) amount:\n\n\\(Bias = \\frac{P_{RE} (RR_{RO} - 1) + 1}{P_{RU} (RR_{RO} - 1) + 1}\\)\nFor empirical covariates, we do not need to assume, we can basically calculate these numbers (\\(log-absolute-bias\\)) for all of the empirical covariates. For each data dimension, we rank each of the empirical covariates based on the amount of bias (confounding or imbalance) it could likely adjust.\n\nBased on this \\(log-absolute-bias\\), we select top k empirical covariates to be used in the hdPS analyses later.\n\n\nout3 <- get_prioritised_covariates(df = out2,\n                                   patientIdVarname = \"idx\", \n                                   exposureVector = basetable$exposure,\n                                   outcomeVector = basetable$outcome,\n                                   patientIdVector = patientIds, \n                                   k = 100)\nnames(out3)\n#> [1] \"autoselected_covariate_df\" \"multiplicative_bias\"\nnames(out3$autoselected_covariate_df)[-1]\n#>   [1] \"rec_dx_I10_once\"     \"rec_dx_R73_once\"     \"rec_dx_I10_frequent\"\n#>   [4] \"rec_dx_R60_once\"     \"rec_dx_E78_once\"     \"rec_dx_M79_once\"    \n#>   [7] \"rec_dx_I51_once\"     \"rec_dx_I50_once\"     \"rec_dx_E87_once\"    \n#>  [10] \"rec_dx_K21_once\"     \"rec_dx_D75_once\"     \"rec_dx_Z79_once\"    \n#>  [13] \"rec_dx_F41_once\"     \"rec_dx_N28_once\"     \"rec_dx_M1A_once\"    \n#>  [16] \"rec_dx_M10_once\"     \"rec_dx_F90_once\"     \"rec_dx_L70_once\"    \n#>  [19] \"rec_dx_F43_once\"     \"rec_dx_M19_once\"     \"rec_dx_E79_once\"    \n#>  [22] \"rec_dx_I50_frequent\" \"rec_dx_B20_once\"     \"rec_dx_R32_once\"    \n#>  [25] \"rec_dx_F32_once\"     \"rec_dx_R12_once\"     \"rec_dx_N19_once\"    \n#>  [28] \"rec_dx_R51_once\"     \"rec_dx_M54_once\"     \"rec_dx_I80_once\"    \n#>  [31] \"rec_dx_N30_once\"     \"rec_dx_J45_once\"     \"rec_dx_B00_once\"    \n#>  [34] \"rec_dx_R07_once\"     \"rec_dx_I70_once\"     \"rec_dx_H10_once\"    \n#>  [37] \"rec_dx_T14_once\"     \"rec_dx_I63_once\"     \"rec_dx_N40_once\"    \n#>  [40] \"rec_dx_M06_once\"     \"rec_dx_A60_once\"     \"rec_dx_G89_once\"    \n#>  [43] \"rec_dx_G43_once\"     \"rec_dx_E28_once\"     \"rec_dx_F31_once\"    \n#>  [46] \"rec_dx_K31_once\"     \"rec_dx_H40_frequent\" \"rec_dx_I21_once\"    \n#>  [49] \"rec_dx_I48_once\"     \"rec_dx_N92_once\"     \"rec_dx_M13_once\"    \n#>  [52] \"rec_dx_J98_once\"     \"rec_dx_M81_once\"     \"rec_dx_R21_once\"    \n#>  [55] \"rec_dx_G47_once\"     \"rec_dx_R35_once\"     \"rec_dx_H40_once\"    \n#>  [58] \"rec_dx_T78_once\"     \"rec_dx_M85_once\"     \"rec_dx_L29_once\"    \n#>  [61] \"rec_dx_G31_once\"     \"rec_dx_B02_once\"     \"rec_dx_T86_once\"    \n#>  [64] \"rec_dx_R52_once\"     \"rec_dx_G25_once\"     \"rec_dx_J20_once\"    \n#>  [67] \"rec_dx_M54_frequent\" \"rec_dx_R42_once\"     \"rec_dx_T86_sporadic\"\n#>  [70] \"rec_dx_I49_once\"     \"rec_dx_I20_once\"     \"rec_dx_E07_once\"    \n#>  [73] \"rec_dx_J30_once\"     \"rec_dx_K92_once\"     \"rec_dx_E03_once\"    \n#>  [76] \"rec_dx_K08_once\"     \"rec_dx_J02_once\"     \"rec_dx_K51_frequent\"\n#>  [79] \"rec_dx_H57_frequent\" \"rec_dx_G30_frequent\" \"rec_dx_J40_once\"    \n#>  [82] \"rec_dx_J42_once\"     \"rec_dx_C80_once\"     \"rec_dx_B96_once\"    \n#>  [85] \"rec_dx_G20_frequent\" \"rec_dx_I99_once\"     \"rec_dx_Z95_once\"    \n#>  [88] \"rec_dx_T88_once\"     \"rec_dx_H66_once\"     \"rec_dx_K58_once\"    \n#>  [91] \"rec_dx_F17_once\"     \"rec_dx_N95_once\"     \"rec_dx_R39_once\"    \n#>  [94] \"rec_dx_R25_once\"     \"rec_dx_K30_once\"     \"rec_dx_R05_once\"    \n#>  [97] \"rec_dx_L08_once\"     \"rec_dx_F39_once\"     \"rec_dx_B37_once\"    \n#> [100] \"rec_dx_N94_once\"\nout3$autoselected_covariate_df$rec_dx_NA_once <- NULL\nout3$autoselected_covariate_df$rec_dx_NA_sporadic <- NULL\nout3$autoselected_covariate_df$rec_dx_NA_frequent <- NULL\ndim(out3$autoselected_covariate_df)\n#> [1] 8944  101\nhead(out3$autoselected_covariate_df[,1:3])\n\n\n\n  \n\n\n\n\n\nH.4.2 Investigate log-absolute-bias\n\nlength(out3$multiplicative_bias)\n#> [1] 152\nsummary(out3$multiplicative_bias)*100\n#>      Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n#>  0.000325  0.018752  0.053685  0.346664  0.125403 10.695535\nlength(out3$multiplicative_bias[out3$multiplicative_bias > 0.0001])\n#> [1] 128\nlength(out3$multiplicative_bias[out3$multiplicative_bias > 0.001])\n#> [1] 50\nlength(out3$multiplicative_bias[out3$multiplicative_bias > 0.01])\n#> [1] 10\nlength(out3$multiplicative_bias[out3$multiplicative_bias > 0.1])\n#> [1] 1\nhist(out3$multiplicative_bias)"
  },
  {
    "objectID": "hdPSinMerged.html#save-all-data",
    "href": "hdPSinMerged.html#save-all-data",
    "title": "Appendix H — Creating hdPS variables from NHANES",
    "section": "H.5 Save all data",
    "text": "H.5 Save all data\n\nH.5.1 Analytic data\n\nanalytic$idx <- analytic$id\nanalytic$id <- NULL\ndim(analytic)\n#> [1] 16091    34\n# profile_missing(analytic)\nanalyticvar.names0 <- names(analytic)\nanalyticvar.names <- setdiff(analyticvar.names0, c(\"age\", \n                                                  \"diabetes\", \n                                                  \"pregnancy\",\n                                                  \"obese\", \n                                                  \"survey.weight\", \n                                                  \"survey.weight.mec\", \n                                                  \"psu\", \n                                                  \"strata\", \n                                                  \"year\", \n                                                  \"idx\"))\n\n\nsave(analytic, analyticvar.names, file = \"data/analyticData.RData\") \n\n\n\nH.5.2 Data with empirical covariates\n\nemp.cov.dim <- step2$recurrence_data\nemp.codes <- names(step2$recurrence_data)[-1]\nemp.cov.data <- merge(analytic, emp.cov.dim, by = \"idx\", all.x = TRUE)\n# profile_missing(emp.cov.data)\nemp.cov.data[is.na(emp.cov.data)] <- 0\n# profile_missing(emp.cov.data)\ndim(emp.cov.data)\n#> [1] 16091   186\nemp.cov.names <- names(step2$recurrence_data)[-1]\nsort(apply(emp.cov.data[,emp.cov.names], 2, sum))[1:10]\n#> rec_dx_K51_frequent rec_dx_B20_frequent rec_dx_G30_frequent rec_dx_L93_frequent \n#>                   7                   9                   9                  10 \n#> rec_dx_F20_frequent rec_dx_G20_frequent rec_dx_T86_frequent rec_dx_H57_frequent \n#>                  11                  11                  12                  15 \n#> rec_dx_J43_frequent     rec_dx_A60_once \n#>                  15                  21\n\n\nsave(emp.cov.names, emp.cov.data, file = \"data/EmpCovData.RData\") \n\n\n\nH.5.3 Data with hdPS covariates\n\nhdps.dim <- out3$autoselected_covariate_df\nhdps.data <- merge(analytic, hdps.dim, by = \"idx\", all.x = TRUE)\n# profile_missing(hdps.data)\nhdps.data[is.na(hdps.data)] <- 0\n# profile_missing(hdps.data)\ndim(hdps.data)\n#> [1] 16091   134\nhdps.names <- names(out3$autoselected_covariate_df)[-1]\nsort(apply(hdps.data[,hdps.names], 2, sum))[1:10]\n#> rec_dx_K51_frequent rec_dx_G30_frequent rec_dx_G20_frequent rec_dx_H57_frequent \n#>                   7                   9                  11                  15 \n#>     rec_dx_A60_once rec_dx_T86_sporadic     rec_dx_J02_once     rec_dx_H66_once \n#>                  21                  23                  24                  24 \n#>     rec_dx_M85_once     rec_dx_B02_once \n#>                  25                  25\n\n\nsave(hdps.names, hdps.data, file = \"data/hdPSData.RData\")"
  },
  {
    "objectID": "labModified.html#load-data",
    "href": "labModified.html#load-data",
    "title": "Appendix I — Preparing data with modified Lab variables",
    "section": "I.1 Load data",
    "text": "I.1 Load data\n\nload(file = \"data/analyticData.RData\") \nload(file = \"data/EmpCovData.RData\") \nls()\n#> [1] \"analytic\"          \"analyticvar.names\" \"emp.cov.data\"     \n#> [4] \"emp.cov.names\""
  },
  {
    "objectID": "labModified.html#list-variables",
    "href": "labModified.html#list-variables",
    "title": "Appendix I — Preparing data with modified Lab variables",
    "section": "I.2 List variables",
    "text": "I.2 List variables\n\ndemovars <- c(\"age.cat\",  # Age\n  \"sex\",  # Sex\n  \"education\",  # Education\n  \"race\", # Race/ethnicity \n  \"marital\",  # Marital status\n  \"income\",  # Family yearly income\n  \"born\",  # Where born / citizenship \n  \"diabetes.family.history\",    # Family history of diabetes\n  \"high.cholesterol\",  # High cholesterol\n  \"smoking\",    # Smoking status\n  \"diet.healthy\",  # How healthy is the diet \n  \"physical.activity\",  # Vigorous physical activity \n  \"medical.access\",    # Access to routine healthcare\n  \"sleep\") # sleep\n# demographic variables in a formula\ndemoform <- paste0(demovars, collapse = \"+\")\ndemoform\n#> [1] \"age.cat+sex+education+race+marital+income+born+diabetes.family.history+high.cholesterol+smoking+diet.healthy+physical.activity+medical.access+sleep\""
  },
  {
    "objectID": "labModified.html#modifications",
    "href": "labModified.html#modifications",
    "title": "Appendix I — Preparing data with modified Lab variables",
    "section": "I.3 Modifications",
    "text": "I.3 Modifications\n\nI.3.1 Exposure\n\nemp.cov.data$exposure <- relevel(as.factor(emp.cov.data$obese), ref = \"No\")\nemp.cov.data$exposure <- ifelse(emp.cov.data$exposure == \"No\", 0 ,1)\n\n\n\nI.3.2 Outcome\n\nemp.cov.data$outcome <- relevel(as.factor(emp.cov.data$diabetes), ref = \"No\")\nemp.cov.data$outcome <- ifelse(emp.cov.data$outcome == \"No\", 0 ,1)\n\n\n\nI.3.3 Original lab variables\n\nlabvars.original <- c(\"uric.acid\", \n                      \"protein.total\", \n                      \"bilirubin.total\", \n                      \"phosphorus\",\n                      \"sodium\", \n                      \"potassium\", \n                      \"globulin\", \n                      \"calcium.total\", \n                      \"high.cholesterol\",\n                      \"systolicBP\", \n                      \"diastolicBP\")\nlabvars.originalform <- paste0(labvars.original, collapse = \"+\")\n\n\n\nI.3.4 Modified lab variables\n\nemp.cov.data$l1 <- with(emp.cov.data, (log(globulin)))\nemp.cov.data$l2 <- with(emp.cov.data, (protein.total*calcium.total))\nemp.cov.data$l3 <- with(emp.cov.data, (diastolicBP/systolicBP)^2)\nemp.cov.data$l4 <- with(emp.cov.data, sqrt(uric.acid+bilirubin.total)/2)\nemp.cov.data$l5 <- with(emp.cov.data, (phosphorus^1.33/(sodium*potassium)))\nemp.cov.data$l6 <- with(emp.cov.data, log(systolicBP+10))\n# Summarize modified lab variables\nsummary(emp.cov.data$l1)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n#>  0.3365  0.9555  1.0647  1.0652  1.1632  1.9459\nsummary(emp.cov.data$l2)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n#>   40.42   63.00   66.74   66.86   70.56  108.04\nsummary(emp.cov.data$l3)\n#>      Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n#> 0.0004269 0.2690539 0.3430612 0.3378184 0.4111073 0.7458678\nsummary(emp.cov.data$l4)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n#>  0.4743  1.1068  1.2145  1.2136  1.3134  2.1737\nsummary(emp.cov.data$l5)\n#>     Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n#> 0.001709 0.008738 0.010108 0.010272 0.011650 0.037625\nsummary(emp.cov.data$l6)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n#>   4.313   4.804   4.888   4.898   4.979   5.513\n# modified lab variables in a formula\nlabvars <- paste0(\"l\",1:6)\nlabform <- paste0(labvars, collapse = \"+\")\nlabform\n#> [1] \"l1+l2+l3+l4+l5+l6\"\n\n\n\nI.3.5 Proxies associated with the outcome\n\n# notable.proxy <- emp.cov.names[apply(emp.cov.data[,emp.cov.names], 2, sum) >= 200]\nproxy.phicoef <- double(length(emp.cov.names))\nnames(proxy.phicoef) <- emp.cov.names\ny <- as.logical(as.vector(emp.cov.data$outcome))\nfor (i in 1:length(emp.cov.names)){\n  x <- as.logical(emp.cov.data[,emp.cov.names][,i])\n  proxy.phicoef[i] <- phicoef(x,y)\n}\nnotable.proxy <- names(proxy.phicoef[proxy.phicoef > 0.05 | proxy.phicoef < -0.05])\nsel.proxy <- notable.proxy[grepl(\"once\", notable.proxy)]\nsel.proxy.form <- paste0(sel.proxy, collapse = \"+\")\nlength(notable.proxy)\n#> [1] 28\nlength(sel.proxy)\n#> [1] 27\nsel.proxy.form\n#> [1] \"rec_dx_D75_once+rec_dx_E03_once+rec_dx_E78_once+rec_dx_E87_once+rec_dx_F32_once+rec_dx_H40_once+rec_dx_I10_once+rec_dx_I20_once+rec_dx_I21_once+rec_dx_I49_once+rec_dx_I50_once+rec_dx_I51_once+rec_dx_I63_once+rec_dx_I80_once+rec_dx_K21_once+rec_dx_K30_once+rec_dx_K59_once+rec_dx_M1A_once+rec_dx_M54_once+rec_dx_M79_once+rec_dx_N19_once+rec_dx_N28_once+rec_dx_N40_once+rec_dx_R07_once+rec_dx_R12_once+rec_dx_R60_once+rec_dx_R73_once\""
  },
  {
    "objectID": "labModified.html#save",
    "href": "labModified.html#save",
    "title": "Appendix I — Preparing data with modified Lab variables",
    "section": "I.4 Save",
    "text": "I.4 Save\n\nfull.data <- emp.cov.data\nsave(demovars, demoform, labvars, labform, \n     labvars.original, labvars.originalform,\n     sel.proxy, sel.proxy.form, emp.cov.names,\n     full.data, \n     file = \"data/fullData.RData\")"
  },
  {
    "objectID": "plasmode.html#load-data",
    "href": "plasmode.html#load-data",
    "title": "Appendix J — Plasmode Simulation",
    "section": "J.1 Load data",
    "text": "J.1 Load data\n\nload(file = \"data/fullData.RData\") \ntable(full.data$exposure)/sum(table(full.data$exposure))\n#> \n#>         0         1 \n#> 0.5999627 0.4000373\ntable(full.data$outcome)/sum(table(full.data$outcome))\n#> \n#>         0         1 \n#> 0.8464359 0.1535641\nlength(demovars)\n#> [1] 14\ndemoform\n#> [1] \"age.cat+sex+education+race+marital+income+born+diabetes.family.history+high.cholesterol+smoking+diet.healthy+physical.activity+medical.access+sleep\"\nlength(labvars.original) \n#> [1] 11\nlabvars.originalform\n#> [1] \"uric.acid+protein.total+bilirubin.total+phosphorus+sodium+potassium+globulin+calcium.total+high.cholesterol+systolicBP+diastolicBP\"\nlength(labvars)\n#> [1] 6\nlabform\n#> [1] \"l1+l2+l3+l4+l5+l6\"\nlength(sel.proxy)\n#> [1] 27\nsel.proxy.form\n#> [1] \"rec_dx_D75_once+rec_dx_E03_once+rec_dx_E78_once+rec_dx_E87_once+rec_dx_F32_once+rec_dx_H40_once+rec_dx_I10_once+rec_dx_I20_once+rec_dx_I21_once+rec_dx_I49_once+rec_dx_I50_once+rec_dx_I51_once+rec_dx_I63_once+rec_dx_I80_once+rec_dx_K21_once+rec_dx_K30_once+rec_dx_K59_once+rec_dx_M1A_once+rec_dx_M54_once+rec_dx_M79_once+rec_dx_N19_once+rec_dx_N28_once+rec_dx_N40_once+rec_dx_R07_once+rec_dx_R12_once+rec_dx_R60_once+rec_dx_R73_once\"\nlength(emp.cov.names)\n#> [1] 152\nbasicdata <- full.data[,c(\"idx\", \n                          demovars,\n                          labvars.original)]\nextendeddata <- full.data[,c(\"idx\", \n                             demovars,\n                             labvars.original,\n                             emp.cov.names)]"
  },
  {
    "objectID": "plasmode.html#create-simple-count-variable",
    "href": "plasmode.html#create-simple-count-variable",
    "title": "Appendix J — Plasmode Simulation",
    "section": "J.2 Create simple count variable",
    "text": "J.2 Create simple count variable\n\nfull.data$simple.count <- apply(full.data[sel.proxy], 1, sum)\nsummary(full.data$simple.count)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n#>    0.00    0.00    0.00    1.05    2.00   12.00\nhist(full.data$simple.count)"
  },
  {
    "objectID": "plasmode.html#setup-formulas",
    "href": "plasmode.html#setup-formulas",
    "title": "Appendix J — Plasmode Simulation",
    "section": "J.3 Setup formulas",
    "text": "J.3 Setup formulas\n\nrhsformula <- paste0(c(demoform, labform, \"simple.count\"), collapse = \"+\")\nrhsformula\n#> [1] \"age.cat+sex+education+race+marital+income+born+diabetes.family.history+high.cholesterol+smoking+diet.healthy+physical.activity+medical.access+sleep+l1+l2+l3+l4+l5+l6+simple.count\"\n\n\nformulaOut <- as.formula(paste0(\"outcome ~ exposure +\", rhsformula))\nformulaOut\n#> outcome ~ exposure + age.cat + sex + education + race + marital + \n#>     income + born + diabetes.family.history + high.cholesterol + \n#>     smoking + diet.healthy + physical.activity + medical.access + \n#>     sleep + l1 + l2 + l3 + l4 + l5 + l6 + simple.count"
  },
  {
    "objectID": "plasmode.html#initial-plasmode",
    "href": "plasmode.html#initial-plasmode",
    "title": "Appendix J — Plasmode Simulation",
    "section": "J.4 Initial plasmode",
    "text": "J.4 Initial plasmode\n\nrequire(Plasmode)\n#> Loading required package: Plasmode\nss <- 7500\n# from https://cran.r-project.org/src/contrib/Archive/Plasmode/Plasmode_0.1.0.tar.gz\nsimdata.obj0 <- PlasmodeBin(formulaOut,\n                       data=full.data,\n                       idVar=\"idx\",\n                       nsim=1, \n                       size=ss)\n#> Deviance = 10776.14 Iterations - 1 \n#> Deviance = 10048.24 Iterations - 2 \n#> Deviance = 9940.694 Iterations - 3 \n#> Deviance = 9935.732 Iterations - 4 \n#> Deviance = 9935.709 Iterations - 5 \n#> Deviance = 9935.709 Iterations - 6\nsimdata.obj0$TrueOutBeta\n#>                        (Intercept)                           exposure \n#>                       -5.519401156                        0.000000000 \n#>                       age.cat50-64                         age.cat65+ \n#>                        0.728950723                        0.674819397 \n#>                          sexFemale               educationHigh school \n#>                       -0.388680551                       -0.075027571 \n#> educationCollege graduate or above                          raceBlack \n#>                       -0.208092002                        0.353797164 \n#>                       raceHispanic                         raceOthers \n#>                        0.609497262                        0.786952365 \n#>        maritalMarried/with partner                       maritalOther \n#>                        0.198714433                        0.078489454 \n#>           income$20,000 to $74,999             income$75,000 and Over \n#>                        0.052560963                       -0.037653378 \n#>                    bornOther place         diabetes.family.historyYes \n#>                        0.020071286                       -2.154062165 \n#>                high.cholesterolYes             smokingPrevious smoker \n#>                        0.602855489                        0.053479819 \n#>              smokingCurrent smoker                   diet.healthyGood \n#>                       -0.151228551                       -0.180184816 \n#> diet.healthyVery good or excellent               physical.activityYes \n#>                       -0.402775047                       -0.207331660 \n#>                  medical.accessYes                              sleep \n#>                        0.647960934                        0.009046918 \n#>                                 l1                                 l2 \n#>                        1.454502875                       -0.002450988 \n#>                                 l3                                 l4 \n#>                       -1.908893384                       -0.728994203 \n#>                                 l5                                 l6 \n#>                       -6.134510766                        0.352041637 \n#>                       simple.count \n#>                        0.439919593\nlength(simdata.obj0$TrueOutBeta)\n#> [1] 31\nsimdata.obj0$RR\n#> [1] 1\nsimdata.obj0$RD\n#> [1] 0"
  },
  {
    "objectID": "plasmode.html#plasmode-simulation",
    "href": "plasmode.html#plasmode-simulation",
    "title": "Appendix J — Plasmode Simulation",
    "section": "J.5 Plasmode simulation",
    "text": "J.5 Plasmode simulation\n\nnSim <- 2000\nsimdata.obj <- PlasmodeBin(formulaOut,\n                       data=full.data,\n                       idVar=\"idx\",\n                       effectOR =2,\n                       nsim=nSim, \n                       size=ss, \n                       eventRate=0.15, \n                       exposedPrev=0.40,\n                       MMOut = c(rep(1, length(simdata.obj0$TrueOutBeta)-1)))\n#> Deviance = 10776.14 Iterations - 1 \n#> Deviance = 10048.24 Iterations - 2 \n#> Deviance = 9940.694 Iterations - 3 \n#> Deviance = 9935.732 Iterations - 4 \n#> Deviance = 9935.709 Iterations - 5 \n#> Deviance = 9935.709 Iterations - 6\nsimdata.obj$TrueOutBeta\n#>                        (Intercept)                           exposure \n#>                       -5.519401156                        0.693147181 \n#>                       age.cat50-64                         age.cat65+ \n#>                        0.728950723                        0.674819397 \n#>                          sexFemale               educationHigh school \n#>                       -0.388680551                       -0.075027571 \n#> educationCollege graduate or above                          raceBlack \n#>                       -0.208092002                        0.353797164 \n#>                       raceHispanic                         raceOthers \n#>                        0.609497262                        0.786952365 \n#>        maritalMarried/with partner                       maritalOther \n#>                        0.198714433                        0.078489454 \n#>           income$20,000 to $74,999             income$75,000 and Over \n#>                        0.052560963                       -0.037653378 \n#>                    bornOther place         diabetes.family.historyYes \n#>                        0.020071286                       -2.154062165 \n#>                high.cholesterolYes             smokingPrevious smoker \n#>                        0.602855489                        0.053479819 \n#>              smokingCurrent smoker                   diet.healthyGood \n#>                       -0.151228551                       -0.180184816 \n#> diet.healthyVery good or excellent               physical.activityYes \n#>                       -0.402775047                       -0.207331660 \n#>                  medical.accessYes                              sleep \n#>                        0.647960934                        0.009046918 \n#>                                 l1                                 l2 \n#>                        1.454502875                       -0.002450988 \n#>                                 l3                                 l4 \n#>                       -1.908893384                       -0.728994203 \n#>                                 l5                                 l6 \n#>                       -6.134510766                        0.352041637 \n#>                       simple.count \n#>                        0.439919593\nexp(simdata.obj$TrueOutBeta)\n#>                        (Intercept)                           exposure \n#>                        0.004008248                        2.000000000 \n#>                       age.cat50-64                         age.cat65+ \n#>                        2.072904415                        1.963678298 \n#>                          sexFemale               educationHigh school \n#>                        0.677950806                        0.927717908 \n#> educationCollege graduate or above                          raceBlack \n#>                        0.812132316                        1.424466224 \n#>                       raceHispanic                         raceOthers \n#>                        1.839506376                        2.196691501 \n#>        maritalMarried/with partner                       maritalOther \n#>                        1.219833571                        1.081651948 \n#>           income$20,000 to $74,999             income$75,000 and Over \n#>                        1.053966813                        0.963046696 \n#>                    bornOther place         diabetes.family.historyYes \n#>                        1.020274069                        0.116011940 \n#>                high.cholesterolYes             smokingPrevious smoker \n#>                        1.827329276                        1.054935702 \n#>              smokingCurrent smoker                   diet.healthyGood \n#>                        0.859651202                        0.835115854 \n#> diet.healthyVery good or excellent               physical.activityYes \n#>                        0.668462455                        0.812750048 \n#>                  medical.accessYes                              sleep \n#>                        1.911638894                        1.009087966 \n#>                                 l1                                 l2 \n#>                        4.282354072                        0.997552013 \n#>                                 l3                                 l4 \n#>                        0.148244345                        0.482393937 \n#>                                 l5                                 l6 \n#>                        0.002166785                        1.421967729 \n#>                       simple.count \n#>                        1.552582376\n\n\nsimdata <- simdata.obj$Sim_Data"
  },
  {
    "objectID": "plasmode.html#save",
    "href": "plasmode.html#save",
    "title": "Appendix J — Plasmode Simulation",
    "section": "J.6 Save",
    "text": "J.6 Save\n\nsave.image(file = \"data/plasmode.RData\")"
  },
  {
    "objectID": "tools.html",
    "href": "tools.html",
    "title": "Appendix K — Tools",
    "section": "",
    "text": "library(ggplot2)\n#> Warning: package 'ggplot2' was built under R version 4.2.2\nmtcars2 <- mtcars\nmtcars2$am <- factor(\n  mtcars$am, labels = c('automatic', 'manual')\n)\nggplot(mtcars2, aes(hp, mpg, color = am)) +\n  geom_point() +  geom_smooth(formula = y ~ x, method = \"loess\") +\n  theme(legend.position = 'bottom')\n\n\n\n\n\nFigure K.1: MPG vs horsepower, colored by transmission.\n\n\n\n\nlibrary(ggplot2)\nmtcars2 <- mtcars\nmtcars2$am <- factor(\n  mtcars$am, labels = c('automatic', 'manual')\n)\nggplot(mtcars2, aes(hp, mpg, color = am)) +\n  geom_point() +  geom_smooth(formula = y ~ x, method = \"loess\") +\n  theme(legend.position = 'bottom')\n\n\n\n\nFigure K.2: MPG vs horsepower, colored by transmission."
  },
  {
    "objectID": "resources.html",
    "href": "resources.html",
    "title": "Appendix L — Resources",
    "section": "",
    "text": "See Chapter 1 for additional discussion.\n\nknitr::kable(\n  mtcars[1:3, 1:3]\n)\n\n\n\n\n\n\nmpg\ncyl\ndisp\n\n\n\n\nMazda RX4\n21.0\n6\n160\n\n\nMazda RX4 Wag\n21.0\n6\n160\n\n\nDatsun 710\n22.8\n4\n108"
  }
]