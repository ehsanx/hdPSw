[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "High dimensional propensity score",
    "section": "",
    "text": "Preface\nThis is a Quarto book.\nTo learn more about Quarto books visit https://quarto.org/docs/books.\nThis is a span that has the class aside which places it in the margin without a footnote number.\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n\n\n\nNote\n\n\n\nNote that there are five types of callouts, including: note, warning, important, tip, and caution.\n\n\n\n\n\n\n\n\nTip With Title\n\n\n\nThis is an example of a callout with a title.\n\n\n\n\n\n\n\n\nExpand To Learn About Collapse\n\n\n\n\n\nThis is an example of a ‘folded’ caution callout that can be expanded by the user. You can use collapse=\"true\" to collapse it by default or collapse=\"false\" to make a collapsible callout that is expanded by default.\n\n\n\n\n\n\n\nflowchart LR\n  A[Hard edge] --> B(Round edge)\n  B --> C{Decision}\n  C --> D[Result one]\n  C --> E[Result two]"
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Introduction",
    "section": "",
    "text": "This is a book created from markdown and executable code.\nSee Knuth (1984) for additional discussion of literate programming.\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n\nKnuth, Donald E. 1984. “Literate Programming.” Comput. J. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Knuth, Donald E. 1984. “Literate Programming.” Comput.\nJ. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "resources.html",
    "href": "resources.html",
    "title": "Appendix B — Resources",
    "section": "",
    "text": "See Chapter 1 for additional discussion.\n\nknitr::kable(\n  mtcars[1:3, 1:3]\n)\n\n\n\n\n\n\nmpg\ncyl\ndisp\n\n\n\n\nMazda RX4\n21.0\n6\n160\n\n\nMazda RX4 Wag\n21.0\n6\n160\n\n\nDatsun 710\n22.8\n4\n108"
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "obj.html",
    "href": "obj.html",
    "title": "2  Objectives",
    "section": "",
    "text": "We know from the first fundamental theorem of calculus that for \\(x\\) in \\([a, b]\\):\n\\[\\frac{d}{dx}\\left( \\int_{a}^{x} f(u)\\,du\\right)=f(x).\\]"
  },
  {
    "objectID": "tools.html",
    "href": "tools.html",
    "title": "Appendix A — Tools",
    "section": "",
    "text": "library(ggplot2)\n\nWarning: package 'ggplot2' was built under R version 4.2.2\n\nmtcars2 <- mtcars\nmtcars2$am <- factor(\n  mtcars$am, labels = c('automatic', 'manual')\n)\nggplot(mtcars2, aes(hp, mpg, color = am)) +\n  geom_point() +  geom_smooth(formula = y ~ x, method = \"loess\") +\n  theme(legend.position = 'bottom')\n\n\n\n\n\nFigure A.1: MPG vs horsepower, colored by transmission.\n\n\n\n\nlibrary(ggplot2)\nmtcars2 <- mtcars\nmtcars2$am <- factor(\n  mtcars$am, labels = c('automatic', 'manual')\n)\nggplot(mtcars2, aes(hp, mpg, color = am)) +\n  geom_point() +  geom_smooth(formula = y ~ x, method = \"loess\") +\n  theme(legend.position = 'bottom')\n\n\n\n\nFigure A.2: MPG vs horsepower, colored by transmission."
  },
  {
    "objectID": "n13.html",
    "href": "n13.html",
    "title": "Appendix A — Data from NHANES 2013-14",
    "section": "",
    "text": "library(nhanesA)\nlibrary(car)\n#> Loading required package: carData\nlibrary(plyr)\nlibrary(dplyr)\n#> Warning: package 'dplyr' was built under R version 4.2.2\n#> \n#> Attaching package: 'dplyr'\n#> The following objects are masked from 'package:plyr':\n#> \n#>     arrange, count, desc, failwith, id, mutate, rename, summarise,\n#>     summarize\n#> The following object is masked from 'package:car':\n#> \n#>     recode\n#> The following objects are masked from 'package:stats':\n#> \n#>     filter, lag\n#> The following objects are masked from 'package:base':\n#> \n#>     intersect, setdiff, setequal, union\n\n\nA.0.1 Download and Subsetting to retain only the useful variables\n\nA.0.1.1 Demographic\n\ndemo <- nhanes('DEMO_H') ### Both males and females 0 YEARS - 150 YEARS\ndemo1 <- demo[c(\"SEQN\", ### Respondent sequence number\n                \"RIDAGEYR\", ### Age in years at screening\n                \"RIAGENDR\", ### gender\n                \"DMDEDUC2\", ### Education level - Adults 20+\n                \"RIDRETH1\", ### race/ethnicity\n                \"DMDMARTL\", ### marital status  \n                \"INDHHIN2\", ### Annual household income\n                \"DMDBORN4\", ### where born\n                \"SDDSRVYR\", ### survey cycle\n                \"WTINT2YR\", ###  Full sample 2 year weights\n                \"SDMVPSU\", ### Masked variance pseudo-PSU\n                \"SDMVSTRA\")] ### Masked variance pseudo-stratum\ndemo_vars <- names(demo1) \ndemo2 <- nhanesTranslate('DEMO_H', demo_vars, data = demo1)\n#> No translation table is available for SEQN\n#> Translated columns: RIAGENDR DMDEDUC2 RIDRETH1 DMDMARTL INDHHIN2 DMDBORN4\n\n\n\nA.0.1.2 BMI\n\nbmx <- nhanes('BMX_H')\nbmx1 <- bmx[c(\"SEQN\", ### Respondent sequence number\n              \"BMXWT\", ### Weight (kg) \n              \"BMXHT\", ### Standing Height (cm)\n              \"BMXBMI\", ### Body Mass Index (kg/m**2): 2 YEARS - 150 YEARS\n              \"BMXWAIST\")] ### Waist Circumference (cm): 2 YEARS - 150 YEARS\nbmx_vars <- names(bmx1)\nbmx2 <- nhanesTranslate('BMX_H', bmx_vars, data = bmx1)\n#> No translation table is available for SEQN\n#> Warning in nhanesTranslate(\"BMX_H\", bmx_vars, data = bmx1): No columns were\n#> translated\n\n\n\nA.0.1.3 Diabetes\n\ndiq <- nhanes('DIQ_H')\ndiq1 <- diq[c(\"SEQN\", ### Respondent sequence number\n              \"DIQ010\", ### Doctor told you have diabetes\n              \"DID040\", ### Age when first told you had diabetes\n              \"DIQ050\", ### Taking insulin now\n              \"DIQ070\", ### Take diabetic pills to lower blood sugar\n              \"DID320\", ### What was most recent LDL number\n              \"DIQ175A\")] ### Family history\ndiq_vars <- names(diq1)\ndiq2 <- nhanesTranslate('DIQ_H', diq_vars, data = diq1)\n#> No translation table is available for SEQN\n#> Translated columns: DIQ010 DIQ050 DIQ070 DIQ175A\n\n\n\nA.0.1.4 Smoking\n\nsmq <- nhanes('SMQ_H')\nsmq1 <- smq[c(\"SEQN\", ### Respondent sequence number\n              \"SMQ020\", ### Smoked at least 100 cigarettes in life\n              \"SMQ040\")] ### Do you now smoke cigarettes?: 18 YEARS - 150 YEARS\nsmq_vars <- names(smq1)\nsmq2 <- nhanesTranslate('SMQ_H', smq_vars, data = smq1)\n#> No translation table is available for SEQN\n#> Translated columns: SMQ020 SMQ040\n\n\n\nA.0.1.5 Diet\n\ndbq <- nhanes('DBQ_H')\ndbq1 <- dbq[c(\"SEQN\", ### Respondent sequence number\n              \"DBQ700\")] ### How healthy is the diet: 16 YEARS - 150 YEARS\ndbq_vars <- names(dbq1)\ndbq2 <- nhanesTranslate('DBQ_H', dbq_vars, data = dbq1)\n#> No translation table is available for SEQN\n#> Translated columns: DBQ700\n\n### Diet - day 1 information\ndr1tot <- nhanes('DR1TOT_H')\ndr1tot1 <- dr1tot[c(\"SEQN\", ### Respondent sequence number\n                    \"DR1TKCAL\", ### Energy (kcal)\n                    \"DR1TALCO\", ### Alcohol (gm): 0 YEARS - 150 YEARS\n                    \"DR1TCARB\", ### Carbohydrate (gm): 0 YEARS - 150 YEARS\n                    \"DR1TSFAT\", ### Total saturated fatty acids (gm)\n                    \"DR1TFIBE\", ### Dietary fiber (gm)\n                    \"DR1TSODI\", ### Sodium (mg)\n                    \"DR1TPOTA\", ### Potassium (mg)\n                    \"DR1TPROT\", ### Protein (gm)\n                    \"DR1TCAFF\")] ### Caffeine (mg)\ndr1tot_vars <- names(dr1tot1)\ndr1tot2 <- nhanesTranslate('DR1TOT_H', dr1tot_vars, data = dr1tot1)\n#> No translation table is available for SEQN\n#> Warning in nhanesTranslate(\"DR1TOT_H\", dr1tot_vars, data = dr1tot1): No columns\n#> were translated\n\n### Diet - day 2 information\ndr2tot <- nhanes('DR2TOT_H')\ndr2tot1 <- dr2tot[c(\"SEQN\", ### Respondent sequence number\n                    \"DR2TKCAL\", ### Energy (kcal)\n                    \"DR2TALCO\", ### Alcohol (gm): 0 YEARS - 150 YEARS\n                    \"DR2TCARB\", ### Carbohydrate (gm): 0 YEARS - 150 YEARS\n                    \"DR2TSFAT\", ### Total saturated fatty acids (gm)\n                    \"DR2TFIBE\", ### Dietary fiber (gm)\n                    \"DR2TSODI\", ### Sodium (mg)\n                    \"DR2TPOTA\", ### Potassium (mg)\n                    \"DR2TPROT\", ### Protein (gm)\n                    \"DR2TCAFF\")] ### Caffeine (mg)\ndr2tot_vars <- names(dr2tot1)\ndr2tot2 <- nhanesTranslate('DR2TOT_H', dr2tot_vars, data = dr2tot1)\n#> No translation table is available for SEQN\n#> Warning in nhanesTranslate(\"DR2TOT_H\", dr2tot_vars, data = dr2tot1): No columns\n#> were translated\n\n\n\nA.0.1.6 Physical activity\n\npaq <- nhanes('PAQ_H')\npaq1 <- paq[c(\"SEQN\", ### Respondent sequence number\n              \"PAQ605\", ### Vigorous work activity: 18 YEARS150 YEARS\n              \"PAQ610\", ### Number of days vigorous work\n              \"PAD615\", ### Minutes vigorous-intensity work\n              \"PAQ620\", ### Moderate work activity\n              \"PAQ625\", ### Number of days moderate work\n              \"PAD630\", ### Minutes moderate-intensity work\n              \"PAQ635\", ### Walk or bicycle \n              \"PAQ640\", ### Number of days walk or bicycle\n              \"PAD645\", ### Minutes walk/bicycle for transportation\n              \"PAQ650\", ### Vigorous recreational activities\n              \"PAQ655\", ### Days vigorous recreational activities\n              \"PAD660\", ### Minutes vigorous recreational activities\n              \"PAQ665\", ### Moderate recreational activities\n              \"PAQ670\", ### Days moderate recreational activities\n              \"PAD675\", ### Minutes moderate recreational activities\n              \"PAD680\")] ### Minutes sedentary activity\npaq_vars <- names(paq1)\npaq2 <- nhanesTranslate('PAQ_H', paq_vars, data = paq1)\n#> No translation table is available for SEQN\n#> Translated columns: PAQ605 PAQ620 PAQ635 PAQ650 PAQ665\n\n\n\nA.0.1.7 Access to healthcare\n\nhuq <- nhanes('HUQ_H')\nhuq1 <- huq[c(\"SEQN\", ### Respondent sequence number\n              \"HUQ030\")] ### Routine place to go for healthcare\nhuq_vars <- names(huq1)\nhuq2 <- nhanesTranslate('HUQ_H', huq_vars, data = huq1)\n#> No translation table is available for SEQN\n#> Translated columns: HUQ030\n\n\n\nA.0.1.8 Blood pressure\n\nbpx <- nhanes('BPX_H')\nbpx1 <- bpx[c(\"SEQN\", ### Respondent sequence number\n              \"BPXSY1\", ### Systolic Blood pres (1st rdg) mmHg: 8 - 150 YEARS\n              \"BPXSY2\", ### Systolic: Blood pres (2nd rdg) mm Hg\n              \"BPXSY3\", ### Systolic: Blood pres (3rd rdg) mm Hg\n              \"BPXSY4\", ### Systolic: Blood pres (4th rdg) mm Hg\n              \"BPXDI1\", ### Diastolic Blood pres (1st rdg) mmHg: 8 - 150 YEARS\n              \"BPXDI2\", ### Diastolic: Blood pres (2nd rdg) mm Hg\n              \"BPXDI3\", ### Diastolic: Blood pres (3rd rdg) mm Hg\n              \"BPXDI4\")] ### Diastolic: Blood pres (4th rdg) mm Hg\nbpx_vars <- names(bpx1)\nbpx2 <- nhanesTranslate('BPX_H', bpx_vars, data = bpx1)\n#> No translation table is available for SEQN\n#> Warning in nhanesTranslate(\"BPX_H\", bpx_vars, data = bpx1): No columns were\n#> translated\n\nbpq <- nhanes('BPQ_H')\nbpq1 <- bpq[c(\"SEQN\", ### Respondent sequence number\n              \"BPQ050A\", ### Now taking prescribed medicine for HBP: 16 YEARS - 150 YEARS\n              \"BPQ100D\", ### Now taking prescribed medicine for cholesterol: 16 YEARS - 150 YEARS\n              \"BPQ080\")] ### high cholesterol\nbpq_vars <- names(bpq1)\nbpq2 <- nhanesTranslate('BPQ_H', bpq_vars, data = bpq1)\n#> No translation table is available for SEQN\n#> Translated columns: BPQ050A BPQ100D BPQ080\n\n\n\nA.0.1.9 Sleep\n\nslq <- nhanes('SLQ_H')\nslq1 <- slq[c(\"SEQN\", ### Respondent sequence number\n              \"SLD010H\", ### Sleep hours \n              \"SLQ050\")] ### Ever told doctor had trouble sleeping?\nslq_vars <- names(slq1)\nslq2 <- nhanesTranslate('SLQ_H', slq_vars, data = slq1)\n#> No translation table is available for SEQN\n#> Translated columns: SLQ050\n\n\n\nA.0.1.10 CVD\n\nmcq <- nhanes('MCQ_H')\nmcq1 <- mcq[c(\"SEQN\", ### Respondent sequence number\n              \"MCQ160A\", ### Doctor ever said you had arthritis: 20 YEARS - 150 YEARS\n              \"MCQ180A\", ### Age when told you had arthritis\n              \"MCQ195\", ### Which type of arthritis was it?\n              \"MCQ160B\", ### Ever told had congestive heart failure\n              \"MCQ180B\", ### Age when told you had heart failure\n              \"MCQ160C\", ### Ever told you had coronary heart disease\n              \"MCQ180C\", ### Age when told had coronary heart disease\n              \"MCQ160D\", ### Ever told you had angina/angina pectoris\n              \"MCQ180D\", ### Age when told you had angina pectoris\n              \"MCQ160E\", ### Ever told you had heart attack\n              \"MCQ180E\", ### Age when told you had heart attack\n              \"MCQ160F\", ### Ever told you had a stroke\n              \"MCQ180F\", ### Age when told you had a stroke\n              \"MCQ300A\", ### Close relative had heart attack?\n              \"MCQ160O\")] ### Ever told you had COPD?: 1 YEARS - 150 YEARS \nmcq_vars <- names(mcq1)\nmcq2 <- nhanesTranslate('MCQ_H', mcq_vars, data = mcq1)\n#> No translation table is available for SEQN\n#> Translated columns: MCQ160A MCQ195 MCQ160B MCQ160C MCQ160D MCQ160E MCQ160F MCQ300A MCQ160O\n\n\n\nA.0.1.11 Laboratory data\n\n### Cholesterol - Total\ntchl <- nhanes('TCHOL_H') ### 6 YEARS - 150 YEARS\ntchl1 <- tchl[c(\"SEQN\", ### Respondent sequence number\n                \"LBXTC\", ### Total Cholesterol (mg/dL)\n                \"LBDTCSI\")] ### Total Cholesterol (mmol/L)\ntchl_vars <- names(tchl1) \ntchl2 <- nhanesTranslate('TCHOL_H', tchl_vars, data = tchl1)\n#> No translation table is available for SEQN\n#> Warning in nhanesTranslate(\"TCHOL_H\", tchl_vars, data = tchl1): No columns were\n#> translated\n\n### Cholesterol - LDL & Triglycerides\nldl <- nhanes('TRIGLY_H')\nldl1 <- ldl[c(\"SEQN\", ### Respondent sequence number\n              \"LBDLDL\", ### LDL-cholesterol (mg/dL)\n              \"LBDLDLSI\", ### LDL-cholesterol (mmol/L)\n              \"LBXTR\", ### Triglyceride (mg/dL)\n              \"LBDTRSI\")] ### Triglyceride (mmol/L)\nldl_vars <- names(ldl1)\nldl2 <- nhanesTranslate('TRIGLY_H', ldl_vars, data = ldl1)\n#> No translation table is available for SEQN\n#> Warning in nhanesTranslate(\"TRIGLY_H\", ldl_vars, data = ldl1): No columns were\n#> translated\n\n### Cholesterol - HDL \nhdl <- nhanes('HDL_H')\nhdl1 <- hdl[c(\"SEQN\", ### Respondent sequence number\n              \"LBDHDD\", ### Direct HDL-Cholesterol (mg/dL)\n              \"LBDHDDSI\")] ### Direct HDL-Cholesterol (mmol/L)\nhdl_vars <- names(hdl1)\nhdl2 <- nhanesTranslate('HDL_H', hdl_vars, data = hdl1)\n#> No translation table is available for SEQN\n#> Warning in nhanesTranslate(\"HDL_H\", hdl_vars, data = hdl1): No columns were\n#> translated\n\n### Standard Biochemistry Profile\nbiopro <- nhanes('BIOPRO_H') ### 12 YEARS - 150 YEARS\nbiopro1 <- biopro[c(\"SEQN\", ### Respondent sequence number\n                    \"LBXSTR\", ### Triglycerides, refrigerated (mg/dL)\n                    \"LBXSUA\", ### Uric acid (mg/dL)\n                    \"LBXSTP\", ### Total protein (g/dL)\n                    \"LBXSTB\", ### Total bilirubin (mg/dL)\n                    \"LBXSPH\", ### Phosphorus (mg/dL)\n                    \"LBXSNASI\", ### Sodium (mmol/L)\n                    \"LBXSKSI\", ### Potassium (mmol/L)\n                    \"LBXSGB\", ### Globulin (g/dL)\n                    \"LBXSCA\")] ### Total Calcium (mg/dL)\nbiopro_vars <- names(biopro1) \nbiopro2 <- nhanesTranslate('BIOPRO_H', biopro_vars, data = biopro1)\n#> No translation table is available for SEQN\n#> Warning in nhanesTranslate(\"BIOPRO_H\", biopro_vars, data = biopro1): No columns\n#> were translated\n\n### Albumin & Creatinine - Urine\nalb <- nhanes('ALB_CR_H') ### 6 YEARS - 150 YEARS\nalb1 <- alb[c(\"SEQN\", ### Respondent sequence number\n              \"URXUMA\", ### Albumin, urine (ug/mL)\n              \"URXUMS\", ### Albumin, urine (mg/L)\n              \"URXUCR\", ### Creatinine, urine (mg/dL) \n              \"URXCRS\", ### Creatinine, urine (umol/L)\n              \"URDACT\")] ### Albumin creatinine ratio (mg/g)\nalb_vars <- names(alb1) \nalb2 <- nhanesTranslate('ALB_CR_H', alb_vars, data = alb1)\n#> No translation table is available for SEQN\n#> Warning in nhanesTranslate(\"ALB_CR_H\", alb_vars, data = alb1): No columns were\n#> translated\n\n### Fasting glucose (mmol/L) \nglu <- nhanes('GLU_H') ### 6 YEARS - 150 YEARS\nglu1 <- glu[c(\"SEQN\", ### Respondent sequence number\n              \"LBXGLU\", ### Fasting Glucose (mg/dL)\n              \"LBDGLUSI\")] ### Fasting Glucose (mmol/L)\nglu_vars <- names(glu1) \nglu2 <- nhanesTranslate('GLU_H', glu_vars, data = glu1)\n#> No translation table is available for SEQN\n#> Warning in nhanesTranslate(\"GLU_H\", glu_vars, data = glu1): No columns were\n#> translated\n\n### Fasting insulin (µU/L)\nins <- nhanes('INS_H') ### 6 YEARS - 150 YEARS\nins1 <- ins[c(\"SEQN\", ### Respondent sequence number\n              \"LBXIN\", ### Insulin (uU/mL)\n              \"LBDINSI\")] ### Insulin (pmol/L)\nins_vars <- names(ins1) \nins2 <- nhanesTranslate('INS_H', ins_vars, data = ins1)\n#> No translation table is available for SEQN\n#> Warning in nhanesTranslate(\"INS_H\", ins_vars, data = ins1): No columns were\n#> translated\n\n### Glycohemoglobin \ngbh <- nhanes('GHB_H') ### 6 YEARS - 150 YEARS\ngbh1 <- gbh[c(\"SEQN\", ### Respondent sequence number\n              \"LBXGH\")] ### Glycohemoglobin (%)\ngbh_vars <- names(gbh1) \ngbh2 <- nhanesTranslate('GHB_H', gbh_vars, data = gbh1)\n#> No translation table is available for SEQN\n#> Warning in nhanesTranslate(\"GHB_H\", gbh_vars, data = gbh1): No columns were\n#> translated\n\n\n\nA.0.1.12 ICD-10-CM codes\n\nrxq <- nhanes('RXQ_RX_H')\nrxq10 <- rxq[c(\"SEQN\", ### Respondent sequence number\n               \"RXDRSC1\")] ### ICD-10-CM code 1\nrxq11 <- names(rxq10) \nrxq12 <- nhanesTranslate('RXQ_RX_H', rxq11, data = rxq10)\n#> No translation table is available for SEQN\n#> Translated columns: RXDRSC1\n\nrxq20 <- rxq[c(\"SEQN\", ### Respondent sequence number\n               \"RXDRSC2\")] ### ICD-10-CM code 2\nrxq21 <- names(rxq20) \nrxq22 <- nhanesTranslate('RXQ_RX_H', rxq21, data = rxq20)\n#> No translation table is available for SEQN\n#> Translated columns: RXDRSC2\n\nrxq30 <- rxq[c(\"SEQN\", ### Respondent sequence number\n               \"RXDRSC3\")] ### ICD-10-CM code 3\nrxq31 <- names(rxq30) \nrxq32 <- nhanesTranslate('RXQ_RX_H', rxq31, data = rxq30)\n#> No translation table is available for SEQN\n#> Translated columns: RXDRSC3\n\n\n\n\nA.0.2 Merging all the datasets - except for ICD-10 codes\n\ndat <- join_all(list(demo2, bmx2, diq2, smq2, dbq2, dr1tot2, dr2tot2, paq2, huq2, bpx2, \n                     bpq2, slq2, mcq2, tchl2, ldl2, hdl2, biopro2, alb2, glu2, ins2, gbh2),\n                by = \"SEQN\", type='full')\ndat2 <- dat\n\n\n\nA.0.3 Recoding\n\nA.0.3.1 ID\n\ndat2$id <- dat2$SEQN\n\n\n\nA.0.3.2 Demographic\n\nA.0.3.2.1 Age\n\ndat2$age <- dat2$RIDAGEYR\n#summary(dat2$age)\ndat2$age.cat <- car::recode(dat2$age, \" 0:19 = '<20'; 20:49 = '20-49'; 50:64 = '50-64'; \n                            65:80 = '65+'; else = NA \")\ndat2$age.cat <- factor(dat2$age.cat, levels = c(\"<20\", \"20-49\", \"50-64\", \"65+\"))\ntable(dat2$age.cat, useNA = \"always\")\n#> \n#>   <20 20-49 50-64   65+  <NA> \n#>  4406  2989  1474  1306     0\n\n\n\nA.0.3.2.2 Sex\n\ndat2$sex <- dat2$RIAGENDR\ntable(dat2$sex, useNA = \"always\")\n#> \n#>   Male Female   <NA> \n#>   5003   5172      0\n\n\n\nA.0.3.2.3 Education\n\ndat2$education <- dat2$DMDEDUC2\ndat2$education <- as.factor(dat2$education)\n#table(dat2$education, useNA = \"always\")\ndat2$education <- car::recode(dat2$education, recodes = \" c('College graduate or above') = \n'College graduate or above'; c('Some college or AA degree', 'High school graduate/GED or equi') = \n'High school'; c('Less than 9th grade', '9-11th grade (Includes 12th grad') = \n'Less than high school'; else = NA \")\ndat2$education <- factor(dat2$education, \n                         levels = c(\"Less than high school\", \"High school\", \n                                    \"College graduate or above\"))\ntable(dat2$education, useNA = \"always\")\n#> \n#>     Less than high school               High school College graduate or above \n#>                      1246                      3073                      1443 \n#>                      <NA> \n#>                      4413\n\n\n\nA.0.3.2.4 Race/ethnicity\n\ndat2$race <- dat2$RIDRETH1\n#table(dat2$race, useNA = \"always\")\ndat2$race <- car::recode(dat2$race, recodes = \" 'Non-Hispanic White'='White';\n                    'Non-Hispanic Black'='Black'; c('Mexican American',\n                    'Other Hispanic')= 'Hispanic'; else='Others' \")\ndat2$race <- factor(dat2$race, levels = c(\"White\", \"Black\", \"Hispanic\", \"Others\"))\ntable(dat2$race, useNA = \"always\")\n#> \n#>    White    Black Hispanic   Others     <NA> \n#>     3674     2267     2690     1544        0\n\n\n\nA.0.3.2.5 Marital status\n\ndat2$marital <- dat2$DMDMARTL\n#table(dat2$marital, useNA = \"always\")\ndat2$marital <- car::recode(dat2$marital, recodes = \" 'Never married'='Never married';\nc('Married', 'Living with partner') = 'Married/with partner'; \n                            c('Widowed', 'Divorced', 'Separated')='Other'; else=NA \")\ndat2$marital <- factor(dat2$marital, levels = c(\"Never married\", \"Married/with partner\",\n                                                \"Other\"))\ntable(dat2$marital, useNA = \"always\")\n#> \n#>        Never married Married/with partner                Other \n#>                 1112                 3382                 1272 \n#>                 <NA> \n#>                 4409\n\n\n\nA.0.3.2.6 Income\n\ndat2$income <- dat2$INDHHIN2\n#table(dat2$income, useNA = \"always\")\ndat2$income  <- car::recode(dat2$income, recodes = \" c('$ 0 to $ 4,999', '$ 5,000 to $ 9,999',\n'$10,000 to $14,999', '$15,000 to $19,999', 'Under $20,000')='less than $20,000';\n                       c('Over $20,000','$20,000 and Over', '$20,000 to $24,999', \n                       '$25,000 to $34,999', '$35,000 to $44,999', '$45,000 to $54,999', \n                       '$55,000 to $64,999', '$65,000 to $74,999')='$20,000 to $74,999';\n                       c('$75,000 to $99,999','$100,000 and Over')='$75,000 and Over'; \n                            else=NA \")\ndat2$income  <- factor(dat2$income , levels=c(\"less than $20,000\", \"$20,000 to $74,999\", \n                                              \"$75,000 and Over\"))\ntable(dat2$income, useNA = \"always\")\n#> \n#>  less than $20,000 $20,000 to $74,999   $75,000 and Over               <NA> \n#>               2110               4964               2641                460\n\n\n\nA.0.3.2.7 Where born / citizenship\n\ndat2$born <- dat2$DMDBORN4\n#table(dat2$born, useNA = \"always\") \ndat2$born <- car::recode(dat2$born, recodes = \" 'Others'='Other place';\n                       'Born in 50 US states or Washingt'= 'Born in US'; else=NA\")\ndat2$born <- factor(dat2$born, levels = c(\"Born in US\", \"Other place\"))\ntable(dat2$born, useNA = \"always\") \n#> \n#>  Born in US Other place        <NA> \n#>        8262        1908           5\n\n\n\n\nA.0.3.3 BMI\n\nA.0.3.3.1 BMI\n\ndat2$bmi <- dat2$BMXBMI\nsummary(dat2$bmi)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>   12.10   19.70   24.70   25.68   30.20   82.90    1120\n\n\n\nA.0.3.3.2 Obesity\n\ndat2$obese <- ifelse(dat2$BMXBMI >= 30, \"Yes\", \"No\")\ndat2$obese <- factor(dat2$obese, levels = c(\"No\", \"Yes\"))\ntable(dat2$obese, useNA = \"always\")\n#> \n#>   No  Yes <NA> \n#> 6708 2347 1120\n\n\n\nA.0.3.3.3 Standing Height (cm)\n\ndat2$bodyheight <- dat2$BMXHT\nsummary(dat2$bodyheight)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>    79.7   149.5   162.0   155.9   171.1   202.6    1108\n\n\n\nA.0.3.3.4 Weight (kg)\n\ndat2$bodyweight <- dat2$BMXWT\nsummary(dat2$bodyweight)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>    3.10   37.95   65.30   62.60   83.50  222.60     452\n\n\n\nA.0.3.3.5 Waist Circumference (cm)\n\ndat2$waist <- dat2$BMXWAIST\nsummary(dat2$waist)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>   40.20   71.20   87.80   87.27  102.80  177.90    1514\n\n\n\n\nA.0.3.4 Diabetes\n\ndat2$diabetes <- dat2$DIQ010\ndat2$diabetes <- car::recode(dat2$diabetes, \" 'Yes'='Yes'; c('No','Borderline')='No';\n                             else=NA \")\n\n### Taking insulin now or diabetic pills to lower blood sugar - they have diabetes\ndat2$diabetes[dat2$DIQ050 == \"Yes\"] <- \"Yes\"\ndat2$diabetes[dat2$DIQ070 == \"Yes\"] <- \"Yes\"\ntable(dat2$diabetes, useNA = \"always\")\n#> \n#>   No  Yes <NA> \n#> 8981  782  412\n\n\n\nA.0.3.5 Family history of diabetes\n\ndat2$diabetes.family.history <- car::recode(dat2$DIQ175A, \" 'Family history' = 'Yes'; \n                             else = 'No' \")\ndat2$diabetes.family.history <- factor(dat2$diabetes.family.history, levels = c(\"No\", \"Yes\"))\ndat2$diabetes.family.history[dat2$DIQ175A==\"Don't know\"] <- NA\ntable(dat2$diabetes.family.history, useNA = \"always\")\n#> \n#>   No  Yes <NA> \n#> 8837 1337    1\n\n\n\nA.0.3.6 Smoking\n\ndat2$smoking <- dat2$SMQ020\n#table(dat2$smoking, useNA = \"always\")\ndat2$smoking <- car::recode(dat2$smoking, \" 'Yes' = 'Current smoker'; 'No' = 'Never smoker'; else=NA  \")\ndat2$smoking <- factor(dat2$smoking, levels = c(\"Never smoker\", \"Previous smoker\", \"Current smoker\"))\n#table(dat2$smoking, useNA = \"always\")\n\n#table(dat2$SMQ040, useNA = \"always\")\n#table(dat2$smoking, dat2$SMQ040, useNA = \"always\")\n\ndat2$smoking[dat2$SMQ040 == \"Not at all\"] <- \"Previous smoker\"\ntable(dat2$smoking, useNA = \"always\")\n#> \n#>    Never smoker Previous smoker  Current smoker            <NA> \n#>            3532            1347            1232            4064\n\n\n\nA.0.3.7 Diet\n\nA.0.3.7.1 How healthy is the diet\n\ndat2$diet.healthy <- dat2$DBQ700\n#table(dat2$diet.healthy, useNA = \"always\")\ndat2$diet.healthy <- car::recode(dat2$diet.healthy, recodes = \" c('Excellent', 'Very good')=\n                    'Very good or excellent'; 'Good'='Good'; c('Fair', 'Poor')=\n                    'Poor or fair'; else = NA \")\ndat2$diet.healthy <- factor(dat2$diet.healthy, levels = c(\"Poor or fair\", \"Good\", \n                                                          \"Very good or excellent\"))\ntable(dat2$diet.healthy, useNA = \"always\")\n#> \n#>           Poor or fair                   Good Very good or excellent \n#>                   1824                   2743                   1896 \n#>                   <NA> \n#>                   3712\n\n\n\nA.0.3.7.2 Energy (kcal)\n\ndat2$diet.energy <- rowMeans(dat2[,c(\"DR1TKCAL\", \"DR2TKCAL\")], na.rm = T)\nsummary(dat2$diet.energy)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>    96.5  1350.0  1786.5  1908.6  2324.0 11361.0    1640\n\n\n\nA.0.3.7.3 Alcohol (gm)\n\ndat2$diet.alcohol <- rowMeans(dat2[,c(\"DR1TALCO\", \"DR2TALCO\")], na.rm = T)\nsummary(dat2$diet.alcohol)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>    0.00    0.00    0.00    5.05    0.00  406.60    1640\n\n\n\nA.0.3.7.4 Carbohydrate (gm)\n\ndat2$diet.carbohydrate <- rowMeans(dat2[,c(\"DR1TCARB\", \"DR2TCARB\")], na.rm = T)\nsummary(dat2$diet.carbohydrate)\n#>     Min.  1st Qu.   Median     Mean  3rd Qu.     Max.     NA's \n#>    5.765  165.985  221.560  237.245  290.835 1423.870     1640\n\n\n\nA.0.3.7.5 Total saturated fatty acids (gm)\n\ndat2$diet.fatty <- rowMeans(dat2[,c(\"DR1TSFAT\", \"DR2TSFAT\")], na.rm = T)\nsummary(dat2$diet.fatty)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>    0.00   14.82   21.32   23.97   30.23  190.06    1640\n\n\n\nA.0.3.7.6 Dietary fiber (gm)\n\ndat2$diet.fiber <- rowMeans(dat2[,c(\"DR1TFIBE\", \"DR2TFIBE\")], na.rm = T)\nsummary(dat2$diet.fiber)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>    0.00    9.45   13.60   15.27   19.40  105.85    1640\n\n\n\nA.0.3.7.7 Dietary sodium (mg)\n\ndat2$diet.sodium <- rowMeans(dat2[,c(\"DR1TSODI\", \"DR2TSODI\")], na.rm = T)\nsummary(dat2$diet.sodium)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>      17    2117    2899    3119    3878   17462    1640\n\n\n\nA.0.3.7.8 Dietary potassium (mg)\n\ndat2$diet.potassium <- rowMeans(dat2[,c(\"DR1TPOTA\", \"DR2TPOTA\")], na.rm = T)\nsummary(dat2$diet.potassium)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>      87    1638    2196    2353    2886   17770    1640\n\n\n\nA.0.3.7.9 Dietary protein (mg)\n\ndat2$diet.protein <- rowMeans(dat2[,c(\"DR1TPROT\", \"DR2TPROT\")], na.rm = T)\nsummary(dat2$diet.protein)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>    0.65   49.60   67.53   74.01   91.78  579.13    1640\n\n\n\nA.0.3.7.10 Dietary caffeine (mg)\n\ndat2$diet.caffeine <- rowMeans(dat2[,c(\"DR1TCAFF\", \"DR2TCAFF\")], na.rm = T)\nsummary(dat2$diet.caffeine)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>    0.00    2.00   30.00   88.92  126.00 1546.00    1640\n\n\n\n\nA.0.3.8 Vigorous physical activity\n\n#table(dat2$PAQ605, useNA = \"always\")\ndat2$physical.activity <- dat2$PAQ605\ndat2$physical.activity <- car::recode(dat2$physical.activity, recodes = \" 'No' = 'No'; \n                                      'Yes' = 'Yes'; else=NA\")\ndat2$physical.activity <- factor(dat2$physical.activity, levels = c(\"No\", \"Yes\"))\ntable(dat2$physical.activity, useNA = \"always\")\n#> \n#>   No  Yes <NA> \n#> 5975 1172 3028\n\n\n\nA.0.3.9 Access to medical services\n\ndat2$medical.access <- dat2$HUQ030\n#table(dat2$medical.access, useNA = \"always\")\ndat2$medical.access <- car::recode(dat2$medical.access, recodes = \" c('Yes',\n                              'There is more than one place')='Yes'; 'There is no place'=\n                              'No'; else=NA\")\ntable(dat2$medical.access, useNA = \"always\")\n#> \n#>   No  Yes <NA> \n#> 1194 8981    0\n\n\n\nA.0.3.10 Hypertension/high blood pressure\n\nA.0.3.10.1 Systolic BP\n\ndat2$systolic1 <- dat2$BPXSY1\ndat2$systolic2 <- dat2$BPXSY2\ndat2$systolic3 <- dat2$BPXSY3\ndat2$systolic4 <- dat2$BPXSY4\n\ndat2 <- dat2 %>% \n  mutate(systolicBP = rowMeans(dat2[, c(\"systolic1\", \"systolic2\", \"systolic3\", \"systolic4\")], \n                             na.rm = TRUE))\nsummary(dat2$systolicBP)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>   64.67  106.00  115.33  118.31  128.00  228.67    2644\n\n\n\nA.0.3.10.2 Diastolic BP\n\ndat2$diastolic1 <- dat2$BPXDI1\ndat2$diastolic1[dat2$diastolic1 == 0] <- NA\n\ndat2$diastolic2 <- dat2$BPXDI2\ndat2$diastolic2[dat2$diastolic2 == 0] <- NA\n\ndat2$diastolic3 <- dat2$BPXDI3\ndat2$diastolic3[dat2$diastolic3 == 0] <- NA\n\ndat2$diastolic4 <- dat2$BPXDI4\ndat2$diastolic4[dat2$diastolic4 == 0] <- NA\n\ndat2 <- dat2 %>% \n  mutate(diastolicBP = rowMeans(dat2[, c(\"diastolic1\", \"diastolic2\", \"diastolic3\", \n                                       \"diastolic4\")], na.rm = TRUE))\nsummary(dat2$diastolicBP)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>   3.333  58.000  66.667  66.329  74.667 128.000    2688\n\n\n\nA.0.3.10.3 Hypertension\n\n### Taking BP lowering medication\ndat2$bpmedication <- dat2$BPQ050A\n\n### Hypertension/HTN - systolic >= 140 or diastolic >= 90 or taking BP lowering medication\ndat2$htn <- ifelse(dat2$systolicBP >= 140 | dat2$diastolicBP >= 90, \"Yes\", \"No\")\ndat2$htn[dat2$bpmedication == \"Yes\"] <- \"Yes\"\ntable(dat2$htn, useNA = \"always\")\n#> \n#>   No  Yes <NA> \n#> 5546 2061 2568\n\n\n\n\nA.0.3.11 Sleep (daily in hours)\n\ndat2$sleep <- dat2$SLD010H\ndat2$sleep[dat2$sleep == 99] <- NA\nsummary(dat2$sleep)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>   2.000   6.000   7.000   6.951   8.000  12.000    3721\n\n\n\nA.0.3.12 CVD\n\n### Congestive heart failure\ndat2$congestive <- dat2$MCQ160B\ndat2$congestive <- car::recode(dat2$congestive, \" 'Yes'='Yes'; 'No'='No'; else=NA \")\n#table(dat2$congestive, useNA = \"always\")\n\n### Coronary heart disease\ndat2$coronary <- dat2$MCQ160C\ndat2$coronary <- car::recode(dat2$coronary, \" 'Yes'='Yes'; 'No'='No'; else=NA \")\n#table(dat2$coronary, useNA = \"always\")\n\n### Angina/angina pectoris\ndat2$angina <- dat2$MCQ160D\ndat2$angina <- car::recode(dat2$angina, \" 'Yes'='Yes'; 'No'='No'; else=NA \")\n#table(dat2$angina, useNA = \"always\")\n\n### Heart attack/Myocardial infarction \ndat2$myocardial <- dat2$MCQ160E\ndat2$myocardial <- car::recode(dat2$myocardial, \" 'Yes'='Yes'; 'No'='No'; else=NA \")\n#table(dat2$myocardial, useNA = \"always\")\n\n### Stroke  \ndat2$stroke <- dat2$MCQ160F\ndat2$stroke <- car::recode(dat2$stroke, \" 'Yes'='Yes'; 'No'='No'; else=NA \")\n#table(dat2$stroke, useNA = \"always\")\n\n### CVD\ndat2$cvd <- dat2$congestive\ndat2$cvd[dat2$coronary == \"Yes\"] <- \"Yes\"\ndat2$cvd[dat2$angina == \"Yes\"] <- \"Yes\"\ndat2$cvd[dat2$myocardial == \"Yes\"] <- \"Yes\"\ndat2$cvd[dat2$stroke == \"Yes\"] <- \"Yes\"\ntable(dat2$cvd, useNA = \"always\")\n#> \n#>   No  Yes <NA> \n#> 5169  595 4411\n\n\n\nA.0.3.13 Laboratory data\n\nA.0.3.13.1 Total Cholesterol (mg/dL)\n\ndat2$cholesterol.total <- dat2$LBXTC\nsummary(dat2$cholesterol.total)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>    69.0   151.0   175.0   179.5   204.0   813.0    2551\n\n\n\nA.0.3.13.2 Cholesterol - LDL (mg/dL)\n\ndat2$cholesterol.ldl <- dat2$LBDLDL\nsummary(dat2$cholesterol.ldl)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>    14.0    81.0   103.0   106.2   127.0   375.0    7070\n\n\n\nA.0.3.13.3 Cholesterol - HDL (mg/dL)\n\ndat2$cholesterol.hdl <- dat2$LBDHDD\nsummary(dat2$cholesterol.hdl)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>   10.00   42.00   51.00   53.11   61.00  173.00    2551\n\n\n\nA.0.3.13.4 Triglycerides\n\ndat2$triglycerides <- dat2$LBXTR\nsummary(dat2$triglycerides)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>    13.0    60.0    88.0   112.3   133.0  4233.0    7029\n\n\n\nA.0.3.13.5 Triglycerides, refrigerated (mg/dL)\n\ndat2$triglycerides.refr <- dat2$LBXSTR\nsummary(dat2$triglycerides.refr)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>    19.0    72.0   111.0   143.1   175.0  6057.0    3626\n\n\n\nA.0.3.13.6 Uric acid (mg/dL)\n\ndat2$uric.acid <- dat2$LBXSUA\nsummary(dat2$uric.acid)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>    0.70    4.30    5.20    5.35    6.20   13.30    3624\n\n\n\nA.0.3.13.7 Total protein (g/dL)\n\ndat2$protein.total <- dat2$LBXSTP\nsummary(dat2$protein.total)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>   4.700   6.800   7.100   7.108   7.400  10.200    3631\n\n\n\nA.0.3.13.8 Total bilirubin (mg/dL)\n\ndat2$bilirubin.total <- dat2$LBXSTB\nsummary(dat2$bilirubin.total)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>   0.100   0.400   0.600   0.639   0.800   7.100    3626\n\n\n\nA.0.3.13.9 Phosphorus (mg/dL)\n\ndat2$phosphorus <- dat2$LBXSPH\nsummary(dat2$phosphorus)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>   1.800   3.500   3.900   3.929   4.300  10.900    3623\n\n\n\nA.0.3.13.10 Sodium (mmol/L)\n\ndat2$sodium <- dat2$LBXSNASI\nsummary(dat2$sodium)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>   119.0   139.0   140.0   139.8   141.0   154.0    3622\n\n\n\nA.0.3.13.11 Potassium (mmol/L)\n\ndat2$potassium <- dat2$LBXSKSI\nsummary(dat2$potassium)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>   2.800   3.800   4.000   4.027   4.200   5.800    3623\n\n\n\nA.0.3.13.12 Globulin (g/dL)\n\ndat2$globulin <- dat2$LBXSGB\nsummary(dat2$globulin)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>   1.400   2.500   2.800   2.826   3.100   6.500    3631\n\n\n\nA.0.3.13.13 Total calcium (mg/dL)\n\ndat2$calcium.total <- dat2$LBXSCA\nsummary(dat2$calcium.total)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>   7.600   9.200   9.500   9.486   9.700  14.800    3664\n\n\n\nA.0.3.13.14 Albumin creatinine ratio (mg/g)\n\ndat2$albumin.creatinine.ratio <- dat2$URDACT\nsummary(dat2$albumin.creatinine.ratio)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>    0.21    5.02    7.78   41.91   15.29 9000.00    2123\n\n\n\nA.0.3.13.15 Fasting Glucose (mg/dL)\n\ndat2$glucose <- dat2$LBXGLU\nsummary(dat2$glucose)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>    51.0    92.0    98.0   105.1   107.0   421.0    7003\n\n\n\nA.0.3.13.16 Fasting insulin (uU/mL)\n\ndat2$insulin <- dat2$LBXIN\nsummary(dat2$insulin)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>    0.14    6.08    9.47   13.53   15.35  682.48    7082\n\n\n\nA.0.3.13.17 HbA1c or Glycohemoglobin (%)\n\ndat2$HbA1c <- dat2$LBXGH\nsummary(dat2$HbA1c)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n#>   3.500   5.200   5.400   5.643   5.800  17.500    3532\n\n\n\nA.0.3.13.18 High cholesterol\n\ndat2$high.cholesterol <- dat2$BPQ080\n#table(dat2$high.cholesterol, useNA = \"always\")\ndat2$high.cholesterol <- car::recode(dat2$high.cholesterol, recodes = \" 'Yes'='Yes';\n                                     'No'='No'; else = NA\")\ntable(dat2$high.cholesterol, useNA = \"always\")\n#> \n#>   No  Yes <NA> \n#> 4391 2037 3747\n\n\n\n\nA.0.3.14 Survey features\n\nA.0.3.14.1 Weight\n\ndat2$survey.weight <- dat2$WTINT2YR\n#summary(dat2$survey.weight)\n\n\n\nA.0.3.14.2 PSU\n\ndat2$psu <- as.factor(dat2$SDMVPSU)\n#table(dat2$psu)\n\n\n\nA.0.3.14.3 Strata\n\ndat2$strata <- as.factor(dat2$SDMVSTRA)\n#table(dat2$strata)\n\n\n\n\nA.0.3.15 Survey year\n\ndat2$year <- \"2013-14\"\ntable(dat2$year, useNA = \"always\") \n#> \n#> 2013-14    <NA> \n#>   10175       0\n\n\n\nA.0.3.16 ICD-10-CM codes\n\ncolnames(rxq12) <- c(\"id\", \"icd10\")\ncolnames(rxq22) <- c(\"id\", \"icd10\")\ncolnames(rxq32) <- c(\"id\", \"icd10\")\n\nrx2013 <- rbind(rxq12, rxq22, rxq32)\nrx2013 <- rx2013[order(rx2013$id),]\n\nrx2013$icd10[rx2013$icd10 == \"Unknown\"] <- NA\nrx2013$icd10[rx2013$icd10 == \"Refused\"] <- NA\nrx2013$icd10[rx2013$icd10 == \"Don't know\"] <- NA\nrx2013$icd10[rx2013$icd10 == \"\"] <- NA\nrx2013$icd10.new <- substr(rx2013$icd10, start = 1, stop = 3)\n\nrx2013 <- na.omit(rx2013)\n\n\n\n\nA.0.4 Analytic data\n\nA.0.4.1 Full dataset\n\nnhanes13 <- dat2\n\n\n\nA.0.4.2 Analytic datset - adults 20 years of more\n\nvars <- c(\n  ### ID\n  \"id\",\n  \n  ### Demographic\n  \"age\", \"age.cat\", \"sex\", \"education\", \"race\", \"marital\", \"income\", \"born\", \n  \n  ### BMI and obesity\n  \"bmi\", \"obese\", \"bodyheight\", \"bodyweight\", \"waist\",\n  \n  ### Diabetes\n  \"diabetes\", \"diabetes.family.history\",\n  \n  ### Smoking\n  \"smoking\", \n  \n  ### Diet\n  \"diet.healthy\", \n  \"diet.energy\", \"diet.alcohol\", \"diet.carbohydrate\", \"diet.fatty\", \"diet.fiber\", \n  \"diet.sodium\", \"diet.potassium\", \"diet.protein\", \"diet.caffeine\", \n  \n  ### Physical activity\n  \"physical.activity\", \n  \n  ### Access to routine healthcare\n  \"medical.access\",\n  \n  ### Blood pressure and Hypertension\n  \"systolicBP\", \"diastolicBP\", \"htn\", \n  \n  ### Sleep \n  \"sleep\",\n  \n  ### CVD\n  \"cvd\",\n  \n  ### Laboratory \n  \"cholesterol.total\", \"cholesterol.ldl\", \"cholesterol.hdl\", \"triglycerides\", \n  \"triglycerides.refr\", \"uric.acid\", \"protein.total\", \"bilirubin.total\", \"phosphorus\",\n  \"sodium\", \"potassium\", \"globulin\", \"calcium.total\", \"albumin.creatinine.ratio\", \n  \"glucose\", \"insulin\", \"HbA1c\", \"high.cholesterol\",\n  \n  ### Survey features\n  \"survey.weight\", \"psu\", \"strata\", \n  \n  ### Survey year\n  \"year\"\n)\n\nanalytic13 <- nhanes13[, vars]\n\n### Adults 20 years of more\nanalytic13 <- subset(analytic13, age >= 20)\n\n\n\nA.0.4.3 Save dataset for later use\n\nsave(nhanes13, analytic13, rx2013, file = \"data/analytic13.RData\")"
  },
  {
    "objectID": "NHANES.html",
    "href": "NHANES.html",
    "title": "NHANES",
    "section": "",
    "text": "Data preparation"
  }
]